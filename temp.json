[
  {
    "url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15478",
    "repository_url": "https://api.github.com/repos/spring-projects/spring-boot",
    "labels_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15478/labels{/name}",
    "comments_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15478/comments",
    "events_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15478/events",
    "html_url": "https://github.com/spring-projects/spring-boot/pull/15478",
    "id": 391480500,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjM4OTc0NDky",
    "number": 15478,
    "title": "Sample code that integrating spring-boot with Virtualan",
    "user": {
      "login": "elans3",
      "id": 12468629,
      "node_id": "MDQ6VXNlcjEyNDY4NjI5",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12468629?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/elans3",
      "html_url": "https://github.com/elans3",
      "followers_url": "https://api.github.com/users/elans3/followers",
      "following_url": "https://api.github.com/users/elans3/following{/other_user}",
      "gists_url": "https://api.github.com/users/elans3/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/elans3/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/elans3/subscriptions",
      "organizations_url": "https://api.github.com/users/elans3/orgs",
      "repos_url": "https://api.github.com/users/elans3/repos",
      "events_url": "https://api.github.com/users/elans3/events{/privacy}",
      "received_events_url": "https://api.github.com/users/elans3/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 293438798,
        "node_id": "MDU6TGFiZWwyOTM0Mzg3OTg=",
        "url": "https://api.github.com/repos/spring-projects/spring-boot/labels/status:%20waiting-for-triage",
        "name": "status: waiting-for-triage",
        "color": "fef2c0",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2018-12-16T16:00:03Z",
    "updated_at": "2018-12-16T16:00:13Z",
    "closed_at": null,
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/spring-projects/spring-boot/pulls/15478",
      "html_url": "https://github.com/spring-projects/spring-boot/pull/15478",
      "diff_url": "https://github.com/spring-projects/spring-boot/pull/15478.diff",
      "patch_url": "https://github.com/spring-projects/spring-boot/pull/15478.patch"
    },
    "body": "Example code that integrating spring-boot with Virtualan.\r\n**Virtualan** is open source based Open API Interface driven Service virtualization tool. Virtualan - Mock service developed on top off spring boot framework.  Any Spring-boot Rest API can be converted as Virtual service in minutes using annotations. Annotations: @VirtualService & @ApiVirtual:\r\n### \r\n\r\n> **Refer more details : https://github.com/elan-venture/virtualan/wiki** \r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15474",
    "repository_url": "https://api.github.com/repos/spring-projects/spring-boot",
    "labels_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15474/labels{/name}",
    "comments_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15474/comments",
    "events_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15474/events",
    "html_url": "https://github.com/spring-projects/spring-boot/issues/15474",
    "id": 391417284,
    "node_id": "MDU6SXNzdWUzOTE0MTcyODQ=",
    "number": 15474,
    "title": "Test slices behave differently with @ImportAutoConfiguration and @EnableAutoConfiguration",
    "user": {
      "login": "dsyer",
      "id": 124075,
      "node_id": "MDQ6VXNlcjEyNDA3NQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/124075?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsyer",
      "html_url": "https://github.com/dsyer",
      "followers_url": "https://api.github.com/users/dsyer/followers",
      "following_url": "https://api.github.com/users/dsyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsyer/subscriptions",
      "organizations_url": "https://api.github.com/users/dsyer/orgs",
      "repos_url": "https://api.github.com/users/dsyer/repos",
      "events_url": "https://api.github.com/users/dsyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 297028791,
        "node_id": "MDU6TGFiZWwyOTcwMjg3OTE=",
        "url": "https://api.github.com/repos/spring-projects/spring-boot/labels/status:%20feedback-provided",
        "name": "status: feedback-provided",
        "color": "fef2c0",
        "default": false
      },
      {
        "id": 293438798,
        "node_id": "MDU6TGFiZWwyOTM0Mzg3OTg=",
        "url": "https://api.github.com/repos/spring-projects/spring-boot/labels/status:%20waiting-for-triage",
        "name": "status: waiting-for-triage",
        "color": "fef2c0",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-12-15T22:32:31Z",
    "updated_at": "2018-12-16T10:00:13Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "body": "It seems like a fairly minor complaint on the surface, but I think it goes fairly deep. The issue  manifests as a difference between using `@EnableAutoConfiguration` and `@ImportAutoConfiguration`, which mostly we haven't really cared much about because we kind of expect everyone to use `@EnableAutoConfiguration` (via `@SpringBootApplication`). But there is now quite a  bit of evidence that `@ImportAutoConfiguration` is a useful tool in its own right, so we should expect that it works the same way.\r\n\r\nYou can recreate the issue pretty easily with this app:\r\n\r\n```java\r\n@SpringBootConfiguration\r\n@ComponentScan\r\n@EnableAutoConfiguration\r\npublic class SampleApplication {\r\n\r\n\t@Bean\r\n\tpublic CommandLineRunner runner(JdbcTemplate jdbc) {\r\n\t\treturn args -> {\r\n\t\t\tjdbc.update(\"INSERT into foo (id, value) VALUES (1, 'Hello')\");\r\n\t\t};\r\n\t}\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tSpringApplication.run(SampleApplication.class, args);\r\n\t}\r\n\r\n\t@Configuration\r\n\t@EntityScan\r\n\t@AutoConfigurationPackage\r\n\tprotected static class Packages {\r\n\t}\r\n\r\n}\r\n\r\n@RestController\r\nclass SampleController {\r\n\r\n\tprivate FooRepository foos;\r\n\r\n\tpublic SampleController(FooRepository foos) {\r\n\t\tthis.foos = foos;\r\n\t}\r\n\r\n\t@GetMapping(\"/\")\r\n\tString home() {\r\n\t\treturn foos.findById(1L).get().getValue();\r\n\t}\r\n\r\n}\r\n\r\ninterface FooRepository extends JpaRepository<Foo, Long> {\r\n}\r\n\r\n@Entity\r\nclass Foo {\r\n\r\n\t@Id\r\n\t@GeneratedValue\r\n\tprivate Long id;\r\n\tprivate String value;\r\n\r\n\tpublic Foo() {\r\n\t}\r\n\r\n\tpublic Foo(String value) {\r\n\t\tthis.value = value;\r\n\t}\r\n\r\n\tpublic String getValue() {\r\n\t\treturn this.value;\r\n\t}\r\n\r\n\tpublic void setValue(String value) {\r\n\t\tthis.value = value;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic String toString() {\r\n\t\treturn \"Foo [value=\" + this.value + \"]\";\r\n\t}\r\n\r\n}\r\n```\r\n\r\nThe app runs fine but if you try to write an test like this:\r\n\r\n```java\r\n@RunWith(SpringRunner.class)\r\n@WebMvcTest(SampleController.class)\r\npublic class WebMvcApplicationTests {\r\n\r\n\t@Autowired\r\n\tprivate MockMvc mockMvc;\r\n\r\n\t@Test\r\n\tpublic void test() throws Exception {\r\n\t\tmockMvc.perform(get(\"/\")).andExpect(status().isOk())\r\n\t\t\t\t.andExpect(content().string(\"Hello\"));\r\n\t}\r\n\r\n}\r\n\r\n```\r\n\r\nit fails. And it should, because there is no implementation of `FooRepository`. The problem is if you replace `@EnableAutoConfiguration` with explicit configurations:\r\n\r\n```java\r\n@SpringBootConfiguration\r\n@ComponentScan\r\n@ImportAutoConfiguration({ PropertyPlaceholderAutoConfiguration.class,\r\nConfigurationPropertiesAutoConfiguration.class, DataSourceAutoConfiguration.class,\r\nJdbcTemplateAutoConfiguration.class, HibernateJpaAutoConfiguration.class,\r\nJpaRepositoriesAutoConfiguration.class,\r\nServletWebServerFactoryAutoConfiguration.class, WebMvcAutoConfiguration.class,\r\nErrorMvcAutoConfiguration.class, DispatcherServletAutoConfiguration.class })\r\npublic class SampleApplication {\r\n...\r\n}\r\n```\r\n\r\nthen the app still runs but the test does not fail, because all of the `@ImportAutoConfiguration` classes are actually imported as part of the test configuration, when they should be excluded.\r\n\r\nThe problem probably comes down to this code in `AutoConfigurationImportSelector`:\r\n\r\n```java\r\n\tprotected boolean isEnabled(AnnotationMetadata metadata) {\r\n\t\tif (getClass() == AutoConfigurationoImportSelector.class) {\r\n\t\t\treturn getEnvironment().getProperty(\r\n\t\t\t\t\tEnableAutoConfiguration.ENABLED_OVERRIDE_PROPERTY, Boolean.class,\r\n\t\t\t\t\ttrue);\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n```\r\n\r\nwhich relies on `@EnableAutoConfiguration` and `@ImportAutoConfiguration` having different `ImportSelector` implementations."
  },
  {
    "url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15473",
    "repository_url": "https://api.github.com/repos/spring-projects/spring-boot",
    "labels_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15473/labels{/name}",
    "comments_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15473/comments",
    "events_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15473/events",
    "html_url": "https://github.com/spring-projects/spring-boot/pull/15473",
    "id": 391273727,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjM4ODM4Mjc2",
    "number": 15473,
    "title": "Optimize StringSequence",
    "user": {
      "login": "dreis2211",
      "id": 6304496,
      "node_id": "MDQ6VXNlcjYzMDQ0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/6304496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dreis2211",
      "html_url": "https://github.com/dreis2211",
      "followers_url": "https://api.github.com/users/dreis2211/followers",
      "following_url": "https://api.github.com/users/dreis2211/following{/other_user}",
      "gists_url": "https://api.github.com/users/dreis2211/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dreis2211/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dreis2211/subscriptions",
      "organizations_url": "https://api.github.com/users/dreis2211/orgs",
      "repos_url": "https://api.github.com/users/dreis2211/repos",
      "events_url": "https://api.github.com/users/dreis2211/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dreis2211/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 293438798,
        "node_id": "MDU6TGFiZWwyOTM0Mzg3OTg=",
        "url": "https://api.github.com/repos/spring-projects/spring-boot/labels/status:%20waiting-for-triage",
        "name": "status: waiting-for-triage",
        "color": "fef2c0",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2018-12-14T20:48:11Z",
    "updated_at": "2018-12-14T20:50:13Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/spring-projects/spring-boot/pulls/15473",
      "html_url": "https://github.com/spring-projects/spring-boot/pull/15473",
      "diff_url": "https://github.com/spring-projects/spring-boot/pull/15473.diff",
      "patch_url": "https://github.com/spring-projects/spring-boot/pull/15473.patch"
    },
    "body": "Hi,\r\n\r\nas mentioned earlier today in #15465 this is the PR for some optimizations of `StringSequence`. More specifically for `StringSequence.subSequence()` in cases where the starting offset is 0 (much like in `String.substring()`). Additionally, for `StringSequence.startsWith()` by avoiding potential allocations of `subSequence()` - even though there is a good chance escape analysis avoids them.\r\n\r\nSee the following results with the patch:\r\n```\r\nBenchmark                                                         Mode  Cnt          Score          Error   Units\r\nMyBenchmark.testStartsWith                                    thrpt   10   67431840,006 ±   791645,524   ops/s\r\nMyBenchmark.testStartsWith:·gc.alloc.rate                     thrpt   10          0,001 ±        0,001  MB/sec\r\nMyBenchmark.testStartsWith:·gc.alloc.rate.norm                thrpt   10         ? 10??                   B/op\r\nMyBenchmark.testStartsWith:·gc.count                          thrpt   10            ? 0                 counts\r\nMyBenchmark.testSubsequence                                   thrpt   10  316711796,197 ± 10992166,059   ops/s\r\nMyBenchmark.testSubsequence:·gc.alloc.rate                    thrpt   10          0,001 ±        0,001  MB/sec\r\nMyBenchmark.testSubsequence:·gc.alloc.rate.norm               thrpt   10         ? 10??                   B/op\r\nMyBenchmark.testSubsequence:·gc.count                         thrpt   10            ? 0                 counts\r\n```\r\nvs. the old code:\r\n```\r\nBenchmark                                                         Mode  Cnt          Score          Error   Units\r\nMyBenchmark.testStartsWith                                    thrpt   10   63029809,023 ±  1172502,340   ops/s\r\nMyBenchmark.testStartsWith:·gc.alloc.rate                     thrpt   10          0,001 ±        0,001  MB/sec\r\nMyBenchmark.testStartsWith:·gc.alloc.rate.norm                thrpt   10         ? 10??                   B/op\r\nMyBenchmark.testStartsWith:·gc.count                          thrpt   10            ? 0                 counts\r\nMyBenchmark.testSubsequence                                   thrpt   10  123833544,662 ±  9933577,230   ops/s\r\nMyBenchmark.testSubsequence:·gc.alloc.rate                    thrpt   10       3777,956 ±      302,934  MB/sec\r\nMyBenchmark.testSubsequence:·gc.alloc.rate.norm               thrpt   10         32,000 ±        0,001    B/op\r\nMyBenchmark.testSubsequence:·gc.churn.PS_Eden_Space           thrpt   10       3769,693 ±      330,836  MB/sec\r\nMyBenchmark.testSubsequence:·gc.churn.PS_Eden_Space.norm      thrpt   10         31,948 ±        2,016    B/op\r\nMyBenchmark.testSubsequence:·gc.churn.PS_Survivor_Space       thrpt   10          0,187 ±        0,074  MB/sec\r\nMyBenchmark.testSubsequence:·gc.churn.PS_Survivor_Space.norm  thrpt   10          0,002 ±        0,001    B/op\r\nMyBenchmark.testSubsequence:·gc.count                         thrpt   10        141,000                 counts\r\nMyBenchmark.testSubsequence:·gc.time                          thrpt   10         93,000                     ms\r\n```\r\n\r\nFor completeness reasons here is the benchmark for the old `startsWith` without escape analysis kicking in (by disabling it via `-XX:-DoEscapeAnalysis`):\r\n```\r\nMyBenchmark.testStartsWith                                    thrpt   10   53268054,305 ± 3264411,681   ops/s\r\nMyBenchmark.testStartsWith:·gc.alloc.rate                     thrpt   10       1625,151 ±      99,597  MB/sec\r\nMyBenchmark.testStartsWith:·gc.alloc.rate.norm                thrpt   10         32,000 ±       0,001    B/op\r\nMyBenchmark.testStartsWith:·gc.churn.PS_Eden_Space            thrpt   10       1678,723 ±     156,577  MB/sec\r\nMyBenchmark.testStartsWith:·gc.churn.PS_Eden_Space.norm       thrpt   10         33,066 ±       2,719    B/op\r\nMyBenchmark.testStartsWith:·gc.churn.PS_Survivor_Space        thrpt   10          0,131 ±       0,077  MB/sec\r\nMyBenchmark.testStartsWith:·gc.churn.PS_Survivor_Space.norm   thrpt   10          0,003 ±       0,001    B/op\r\nMyBenchmark.testStartsWith:·gc.count                          thrpt   10         81,000                counts\r\nMyBenchmark.testStartsWith:·gc.time                           thrpt   10         58,000                    ms\r\n```\r\n\r\nLet me know what you think.\r\nCheers,\r\nChristoph"
  },
  {
    "url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15472",
    "repository_url": "https://api.github.com/repos/spring-projects/spring-boot",
    "labels_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15472/labels{/name}",
    "comments_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15472/comments",
    "events_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15472/events",
    "html_url": "https://github.com/spring-projects/spring-boot/pull/15472",
    "id": 391175921,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjM4NzcyNTM2",
    "number": 15472,
    "title": "Skip actuator security autoconfig if resource server autoconfig is active",
    "user": {
      "login": "sdoxsee",
      "id": 1173362,
      "node_id": "MDQ6VXNlcjExNzMzNjI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1173362?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdoxsee",
      "html_url": "https://github.com/sdoxsee",
      "followers_url": "https://api.github.com/users/sdoxsee/followers",
      "following_url": "https://api.github.com/users/sdoxsee/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdoxsee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdoxsee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdoxsee/subscriptions",
      "organizations_url": "https://api.github.com/users/sdoxsee/orgs",
      "repos_url": "https://api.github.com/users/sdoxsee/repos",
      "events_url": "https://api.github.com/users/sdoxsee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdoxsee/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 16916891,
        "node_id": "MDU6TGFiZWwxNjkxNjg5MQ==",
        "url": "https://api.github.com/repos/spring-projects/spring-boot/labels/type:%20bug",
        "name": "type: bug",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": {
      "url": "https://api.github.com/repos/spring-projects/spring-boot/milestones/106",
      "html_url": "https://github.com/spring-projects/spring-boot/milestone/106",
      "labels_url": "https://api.github.com/repos/spring-projects/spring-boot/milestones/106/labels",
      "id": 3206354,
      "node_id": "MDk6TWlsZXN0b25lMzIwNjM1NA==",
      "number": 106,
      "title": "2.1.x",
      "description": "Issues that we want to solve in the 2.1.x line.\r\n\r\n",
      "creator": {
        "login": "philwebb",
        "id": 519772,
        "node_id": "MDQ6VXNlcjUxOTc3Mg==",
        "avatar_url": "https://avatars1.githubusercontent.com/u/519772?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/philwebb",
        "html_url": "https://github.com/philwebb",
        "followers_url": "https://api.github.com/users/philwebb/followers",
        "following_url": "https://api.github.com/users/philwebb/following{/other_user}",
        "gists_url": "https://api.github.com/users/philwebb/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/philwebb/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/philwebb/subscriptions",
        "organizations_url": "https://api.github.com/users/philwebb/orgs",
        "repos_url": "https://api.github.com/users/philwebb/repos",
        "events_url": "https://api.github.com/users/philwebb/events{/privacy}",
        "received_events_url": "https://api.github.com/users/philwebb/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 29,
      "closed_issues": 0,
      "state": "open",
      "created_at": "2018-03-21T14:09:08Z",
      "updated_at": "2018-12-14T18:07:30Z",
      "due_on": null,
      "closed_at": null
    },
    "comments": 2,
    "created_at": "2018-12-14T16:20:21Z",
    "updated_at": "2018-12-14T18:07:30Z",
    "closed_at": null,
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/spring-projects/spring-boot/pulls/15472",
      "html_url": "https://github.com/spring-projects/spring-boot/pull/15472",
      "diff_url": "https://github.com/spring-projects/spring-boot/pull/15472.diff",
      "patch_url": "https://github.com/spring-projects/spring-boot/pull/15472.patch"
    },
    "body": "I had a working Spring Boot 2.1.0 OAuth2 resource server application (with autoconfig based on https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#boot-features-security-oauth2-server) but wanted to add the actuator. What happened was that the actuator security configuration autoconfiguration occurred before the OAuth2ResourceServerAutoconfiguration resulting in my endpoints becoming Basic-protected rather than OAuth2-protected.\r\n\r\nI noticed that actuator security configuration was skipped if OAuth2 client autoconfiguration exists and figured that since resource server was new in 2.1.x that adding detection for its security configuration was missed (didn't see any tests for that level of detail...nor the right way to add tests for these \"composed starter\" cases).  \r\n\r\nI realize that this OAuth2-protects ALL the actuator endpoints (including the normally open health and info endpoints) but, without autoconfiguration detecting and creating a hybrid security config, this seemed to be this simplest logical solution and was more in line with the docs:\r\n\r\n> If Spring Security is on the classpath and no other WebSecurityConfigurerAdapter is present, all actuators other than /health and /info are secured by Spring Boot auto-configuration. If you define a custom WebSecurityConfigurerAdapter, Spring Boot auto-configuration will back off and you will be in full control of actuator access rules.\r\n\r\nhttps://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#boot-features-security-actuator\r\n"
  },
  {
    "url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15471",
    "repository_url": "https://api.github.com/repos/spring-projects/spring-boot",
    "labels_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15471/labels{/name}",
    "comments_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15471/comments",
    "events_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15471/events",
    "html_url": "https://github.com/spring-projects/spring-boot/issues/15471",
    "id": 391165051,
    "node_id": "MDU6SXNzdWUzOTExNjUwNTE=",
    "number": 15471,
    "title": "Minimise and centralise assumptions about build output",
    "user": {
      "login": "wilkinsona",
      "id": 914682,
      "node_id": "MDQ6VXNlcjkxNDY4Mg==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/914682?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wilkinsona",
      "html_url": "https://github.com/wilkinsona",
      "followers_url": "https://api.github.com/users/wilkinsona/followers",
      "following_url": "https://api.github.com/users/wilkinsona/following{/other_user}",
      "gists_url": "https://api.github.com/users/wilkinsona/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wilkinsona/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wilkinsona/subscriptions",
      "organizations_url": "https://api.github.com/users/wilkinsona/orgs",
      "repos_url": "https://api.github.com/users/wilkinsona/repos",
      "events_url": "https://api.github.com/users/wilkinsona/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wilkinsona/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 69230488,
        "node_id": "MDU6TGFiZWw2OTIzMDQ4OA==",
        "url": "https://api.github.com/repos/spring-projects/spring-boot/labels/type:%20task",
        "name": "type: task",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "wilkinsona",
      "id": 914682,
      "node_id": "MDQ6VXNlcjkxNDY4Mg==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/914682?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wilkinsona",
      "html_url": "https://github.com/wilkinsona",
      "followers_url": "https://api.github.com/users/wilkinsona/followers",
      "following_url": "https://api.github.com/users/wilkinsona/following{/other_user}",
      "gists_url": "https://api.github.com/users/wilkinsona/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wilkinsona/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wilkinsona/subscriptions",
      "organizations_url": "https://api.github.com/users/wilkinsona/orgs",
      "repos_url": "https://api.github.com/users/wilkinsona/repos",
      "events_url": "https://api.github.com/users/wilkinsona/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wilkinsona/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "wilkinsona",
        "id": 914682,
        "node_id": "MDQ6VXNlcjkxNDY4Mg==",
        "avatar_url": "https://avatars3.githubusercontent.com/u/914682?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/wilkinsona",
        "html_url": "https://github.com/wilkinsona",
        "followers_url": "https://api.github.com/users/wilkinsona/followers",
        "following_url": "https://api.github.com/users/wilkinsona/following{/other_user}",
        "gists_url": "https://api.github.com/users/wilkinsona/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/wilkinsona/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/wilkinsona/subscriptions",
        "organizations_url": "https://api.github.com/users/wilkinsona/orgs",
        "repos_url": "https://api.github.com/users/wilkinsona/repos",
        "events_url": "https://api.github.com/users/wilkinsona/events{/privacy}",
        "received_events_url": "https://api.github.com/users/wilkinsona/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/spring-projects/spring-boot/milestones/130",
      "html_url": "https://github.com/spring-projects/spring-boot/milestone/130",
      "labels_url": "https://api.github.com/repos/spring-projects/spring-boot/milestones/130/labels",
      "id": 3865602,
      "node_id": "MDk6TWlsZXN0b25lMzg2NTYwMg==",
      "number": 130,
      "title": "2.2.0.M1",
      "description": "",
      "creator": {
        "login": "snicoll",
        "id": 490484,
        "node_id": "MDQ6VXNlcjQ5MDQ4NA==",
        "avatar_url": "https://avatars0.githubusercontent.com/u/490484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/snicoll",
        "html_url": "https://github.com/snicoll",
        "followers_url": "https://api.github.com/users/snicoll/followers",
        "following_url": "https://api.github.com/users/snicoll/following{/other_user}",
        "gists_url": "https://api.github.com/users/snicoll/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/snicoll/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/snicoll/subscriptions",
        "organizations_url": "https://api.github.com/users/snicoll/orgs",
        "repos_url": "https://api.github.com/users/snicoll/repos",
        "events_url": "https://api.github.com/users/snicoll/events{/privacy}",
        "received_events_url": "https://api.github.com/users/snicoll/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 1,
      "closed_issues": 20,
      "state": "open",
      "created_at": "2018-12-03T08:35:21Z",
      "updated_at": "2018-12-15T10:42:02Z",
      "due_on": null,
      "closed_at": null
    },
    "comments": 1,
    "created_at": "2018-12-14T15:52:38Z",
    "updated_at": "2018-12-15T10:42:13Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "body": "There are a number of places in the codebase that make assumptions about the location of the build output and its structure. We also have a number of tests that write into the build output location when they could be using a temporary directory instead. We should minimise the assumptions that we make about build output location and structure, and, where we need to use the location, do so using a helper class so that the assumptions are located in a single place in the codebase. "
  },
  {
    "url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15470",
    "repository_url": "https://api.github.com/repos/spring-projects/spring-boot",
    "labels_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15470/labels{/name}",
    "comments_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15470/comments",
    "events_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15470/events",
    "html_url": "https://github.com/spring-projects/spring-boot/issues/15470",
    "id": 391148631,
    "node_id": "MDU6SXNzdWUzOTExNDg2MzE=",
    "number": 15470,
    "title": " Could not resolve matching constructor (hint: specify index/type/name arguments for simple parameters to avoid type ambiguities)",
    "user": {
      "login": "hongli8881",
      "id": 5054983,
      "node_id": "MDQ6VXNlcjUwNTQ5ODM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5054983?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hongli8881",
      "html_url": "https://github.com/hongli8881",
      "followers_url": "https://api.github.com/users/hongli8881/followers",
      "following_url": "https://api.github.com/users/hongli8881/following{/other_user}",
      "gists_url": "https://api.github.com/users/hongli8881/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hongli8881/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hongli8881/subscriptions",
      "organizations_url": "https://api.github.com/users/hongli8881/orgs",
      "repos_url": "https://api.github.com/users/hongli8881/repos",
      "events_url": "https://api.github.com/users/hongli8881/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hongli8881/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 131738784,
        "node_id": "MDU6TGFiZWwxMzE3Mzg3ODQ=",
        "url": "https://api.github.com/repos/spring-projects/spring-boot/labels/for:%20stackoverflow",
        "name": "for: stackoverflow",
        "color": "c5def5",
        "default": false
      },
      {
        "id": 16916894,
        "node_id": "MDU6TGFiZWwxNjkxNjg5NA==",
        "url": "https://api.github.com/repos/spring-projects/spring-boot/labels/status:%20invalid",
        "name": "status: invalid",
        "color": "fef2c0",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2018-12-14T15:11:40Z",
    "updated_at": "2018-12-14T15:31:18Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "I got following exception when I try to run my test project.\r\n\r\n```\r\n                _                             \r\n ___ _ __  _ __(_)_ __   __ _   _ __ ___   ___  \r\n/ __| '_ \\| '__| | '_ \\ / _` | | '__/ _ \\ / _ \\ \r\n\\__ \\ |_) | |  | | | | | (_| | | | | (_) | (_) |\r\n|___/ .__/|_|  |_|_| |_|\\__, | |_|  \\___/ \\___/ \r\n    |_|                 |___/ \r\n\r\nSpring application made with Spring Roo 2.0\r\nDoubts? http://projects.spring.io/spring-roo/\r\n\r\n2018-12-14 09:22:58.379  INFO 48324 --- [  restartedMain] c.s.roo.pizzashop.PizzaApplication       : Starting PizzaApplication on H21CPFI00PS0071 with PID 48324 (C:\\spring_roo_pizza\\pizza\\application\\target\\classes started by hl59937 in C:\\spring_roo_pizza\\pizza\\application)\r\n2018-12-14 09:22:58.382  INFO 48324 --- [  restartedMain] c.s.roo.pizzashop.PizzaApplication       : No active profile set, falling back to default profiles: default\r\n2018-12-14 09:22:58.482  INFO 48324 --- [  restartedMain] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5e544680: startup date [Fri Dec 14 09:22:58 EST 2018]; root of context hierarchy\r\n2018-12-14 09:23:06.807 ERROR 48324 --- [  restartedMain] o.s.boot.SpringApplication               : Application startup failed\r\n\r\njava.lang.IllegalStateException: Error processing condition on org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration\r\n\tat org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:64) ~[spring-boot-autoconfigure-1.4.1.RELEASE.jar:1.4.1.RELEASE]\r\n\tat org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:102) ~[spring-context-4.3.3.RELEASE.jar:4.3.3.RELEASE]\r\n\tat org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader$TrackedConditionEvaluator.shouldSkip(ConfigurationClassBeanDefinitionReader.java:436) ~[spring-context-4.3.3.RELEASE.jar:4.3.3.RELEASE]\r\n\tat org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader$TrackedConditionEvaluator.shouldSkip(ConfigurationClassBeanDefinitionReader.java:425) ~[spring-context-4.3.3.RELEASE.jar:4.3.3.RELEASE]\r\n\tat org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:127) ~[spring-context-4.3.3.RELEASE.jar:4.3.3.RELEASE]\r\n\tat org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:116) ~[spring-context-4.3.3.RELEASE.jar:4.3.3.RELEASE]\r\n\tat org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:336) ~[spring-context-4.3.3.RELEASE.jar:4.3.3.RELEASE]\r\n\tat org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:246) ~[spring-context-4.3.3.RELEASE.jar:4.3.3.RELEASE]\r\n\tat org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:273) ~[spring-context-4.3.3.RELEASE.jar:4.3.3.RELEASE]\r\n\tat org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:98) ~[spring-context-4.3.3.RELEASE.jar:4.3.3.RELEASE]\r\n\tat org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:681) ~[spring-context-4.3.3.RELEASE.jar:4.3.3.RELEASE]\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:523) ~[spring-context-4.3.3.RELEASE.jar:4.3.3.RELEASE]\r\n\tat org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122) ~[spring-boot-1.4.1.RELEASE.jar:1.4.1.RELEASE]\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:761) [spring-boot-1.4.1.RELEASE.jar:1.4.1.RELEASE]\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:371) [spring-boot-1.4.1.RELEASE.jar:1.4.1.RELEASE]\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:315) [spring-boot-1.4.1.RELEASE.jar:1.4.1.RELEASE]\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1186) [spring-boot-1.4.1.RELEASE.jar:1.4.1.RELEASE]\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1175) [spring-boot-1.4.1.RELEASE.jar:1.4.1.RELEASE]\r\n\tat com.springsource.roo.pizzashop.PizzaApplication.main(PizzaApplication.java:21) [classes/:na]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_101]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_101]\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_101]\r\n\tat java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_101]\r\n\tat org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) [spring-boot-devtools-1.4.1.RELEASE.jar:1.4.1.RELEASE]\r\nCaused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'toppingRepository': Could not resolve matching constructor (hint: specify index/type/name arguments for simple parameters to avoid type ambiguities)\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240) ~[spring-beans-4.3.3.RELEASE.jar:4.3.3.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1148) ~[spring-beans-4.3.3.RELEASE.jar:4.3.3.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1051) ~[spring-beans-4.3.3.RELEASE.jar:4.3.3.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getSingletonFactoryBeanForTypeCheck(AbstractAutowireCapableBeanFactory.java:870) ~[spring-beans-4.3.3.RELEASE.jar:4.3.3.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:797) ~[spring-beans-4.3.3.RELEASE.jar:4.3.3.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544) ~[spring-beans-4.3.3.RELEASE.jar:4.3.3.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:422) ~[spring-beans-4.3.3.RELEASE.jar:4.3.3.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:390) ~[spring-beans-4.3.3.RELEASE.jar:4.3.3.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:384) ~[spring-beans-4.3.3.RELEASE.jar:4.3.3.RELEASE]\r\n\tat org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$DevToolsDataSourceCondition.getMatchOutcome(DevToolsDataSourceAutoConfiguration.java:133) ~[spring-boot-devtools-1.4.1.RELEASE.jar:1.4.1.RELEASE]\r\n\tat org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:47) ~[spring-boot-autoconfigure-1.4.1.RELEASE.jar:1.4.1.RELEASE]\r\n\t... 23 common frames omitted\r\n\r\n2018-12-14 09:23:06.809  INFO 48324 --- [  restartedMain] ationConfigEmbeddedWebApplicationContext : Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5e544680: startup date [Fri Dec 14 09:22:58 EST 2018]; root of context hierarchy\r\n2018-12-14 09:23:06.824  WARN 48324 --- [  restartedMain] ationConfigEmbeddedWebApplicationContext : Exception thrown from LifecycleProcessor on context close\r\n\r\njava.lang.IllegalStateException: LifecycleProcessor not initialized - call 'refresh' before invoking lifecycle methods via the context: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5e544680: startup date [Fri Dec 14 09:22:58 EST 2018]; root of context hierarchy\r\n\tat org.springframework.context.support.AbstractApplicationContext.getLifecycleProcessor(AbstractApplicationContext.java:416) [spring-context-4.3.3.RELEASE.jar:4.3.3.RELEASE]\r\n\tat org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:997) [spring-context-4.3.3.RELEASE.jar:4.3.3.RELEASE]\r\n\tat org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:956) [spring-context-4.3.3.RELEASE.jar:4.3.3.RELEASE]\r\n\tat org.springframework.boot.SpringApplication.handleRunFailure(SpringApplication.java:818) [spring-boot-1.4.1.RELEASE.jar:1.4.1.RELEASE]\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:326) [spring-boot-1.4.1.RELEASE.jar:1.4.1.RELEASE]\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1186) [spring-boot-1.4.1.RELEASE.jar:1.4.1.RELEASE]\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1175) [spring-boot-1.4.1.RELEASE.jar:1.4.1.RELEASE]\r\n\tat com.springsource.roo.pizzashop.PizzaApplication.main(PizzaApplication.java:21) [classes/:na]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_101]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_101]\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_101]\r\n\tat java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_101]\r\n\tat org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) [spring-boot-devtools-1.4.1.RELEASE.jar:1.4.1.RELEASE]\r\n\r\n2018-12-14 09:23:06.828  WARN 48324 --- [  restartedMain] o.s.boot.SpringApplication               : Unable to close ApplicationContext\r\n\r\norg.springframework.beans.factory.BeanCreationException: Error creating bean with name 'toppingRepository': Could not resolve matching constructor (hint: specify index/type/name arguments for simple parameters to avoid type ambiguities)\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240) ~[spring-beans-4.3.3.RELEASE.jar:4.3.3.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1148) ~[spring-beans-4.3.3.RELEASE.jar:4.3.3.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1051) ~[spring-beans-4.3.3.RELEASE.jar:4.3.3.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getSingletonFactoryBeanForTypeCheck(AbstractAutowireCapableBeanFactory.java:870) ~[spring-beans-4.3.3.RELEASE.jar:4.3.3.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:797) ~[spring-beans-4.3.3.RELEASE.jar:4.3.3.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544) ~[spring-beans-4.3.3.RELEASE.jar:4.3.3.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:422) ~[spring-beans-4.3.3.RELEASE.jar:4.3.3.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:390) ~[spring-beans-4.3.3.RELEASE.jar:4.3.3.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:505) ~[spring-beans-4.3.3.RELEASE.jar:4.3.3.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:498) ~[spring-beans-4.3.3.RELEASE.jar:4.3.3.RELEASE]\r\n\tat org.springframework.context.support.AbstractApplicationContext.getBeansOfType(AbstractApplicationContext.java:1184) ~[spring-context-4.3.3.RELEASE.jar:4.3.3.RELEASE]\r\n\tat org.springframework.boot.SpringApplication.getExitCodeFromMappedException(SpringApplication.java:886) [spring-boot-1.4.1.RELEASE.jar:1.4.1.RELEASE]\r\n\tat org.springframework.boot.SpringApplication.getExitCodeFromException(SpringApplication.java:872) [spring-boot-1.4.1.RELEASE.jar:1.4.1.RELEASE]\r\n\tat org.springframework.boot.SpringApplication.handleExitCode(SpringApplication.java:858) [spring-boot-1.4.1.RELEASE.jar:1.4.1.RELEASE]\r\n\tat org.springframework.boot.SpringApplication.handleRunFailure(SpringApplication.java:812) [spring-boot-1.4.1.RELEASE.jar:1.4.1.RELEASE]\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:326) [spring-boot-1.4.1.RELEASE.jar:1.4.1.RELEASE]\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1186) [spring-boot-1.4.1.RELEASE.jar:1.4.1.RELEASE]\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1175) [spring-boot-1.4.1.RELEASE.jar:1.4.1.RELEASE]\r\n\tat com.springsource.roo.pizzashop.PizzaApplication.main(PizzaApplication.java:21) [classes/:na]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_101]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_101]\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_101]\r\n\tat java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_101]\r\n\tat org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) [spring-boot-devtools-1.4.1.RELEASE.jar:1.4.1.RELEASE]\r\n```\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15468",
    "repository_url": "https://api.github.com/repos/spring-projects/spring-boot",
    "labels_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15468/labels{/name}",
    "comments_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15468/comments",
    "events_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15468/events",
    "html_url": "https://github.com/spring-projects/spring-boot/issues/15468",
    "id": 391124855,
    "node_id": "MDU6SXNzdWUzOTExMjQ4NTU=",
    "number": 15468,
    "title": "Dependency management for Groovy 2.5 is incomplete",
    "user": {
      "login": "artembilan",
      "id": 1071590,
      "node_id": "MDQ6VXNlcjEwNzE1OTA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/artembilan",
      "html_url": "https://github.com/artembilan",
      "followers_url": "https://api.github.com/users/artembilan/followers",
      "following_url": "https://api.github.com/users/artembilan/following{/other_user}",
      "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions",
      "organizations_url": "https://api.github.com/users/artembilan/orgs",
      "repos_url": "https://api.github.com/users/artembilan/repos",
      "events_url": "https://api.github.com/users/artembilan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/artembilan/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 16916891,
        "node_id": "MDU6TGFiZWwxNjkxNjg5MQ==",
        "url": "https://api.github.com/repos/spring-projects/spring-boot/labels/type:%20bug",
        "name": "type: bug",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": {
      "url": "https://api.github.com/repos/spring-projects/spring-boot/milestones/106",
      "html_url": "https://github.com/spring-projects/spring-boot/milestone/106",
      "labels_url": "https://api.github.com/repos/spring-projects/spring-boot/milestones/106/labels",
      "id": 3206354,
      "node_id": "MDk6TWlsZXN0b25lMzIwNjM1NA==",
      "number": 106,
      "title": "2.1.x",
      "description": "Issues that we want to solve in the 2.1.x line.\r\n\r\n",
      "creator": {
        "login": "philwebb",
        "id": 519772,
        "node_id": "MDQ6VXNlcjUxOTc3Mg==",
        "avatar_url": "https://avatars1.githubusercontent.com/u/519772?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/philwebb",
        "html_url": "https://github.com/philwebb",
        "followers_url": "https://api.github.com/users/philwebb/followers",
        "following_url": "https://api.github.com/users/philwebb/following{/other_user}",
        "gists_url": "https://api.github.com/users/philwebb/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/philwebb/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/philwebb/subscriptions",
        "organizations_url": "https://api.github.com/users/philwebb/orgs",
        "repos_url": "https://api.github.com/users/philwebb/repos",
        "events_url": "https://api.github.com/users/philwebb/events{/privacy}",
        "received_events_url": "https://api.github.com/users/philwebb/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 29,
      "closed_issues": 0,
      "state": "open",
      "created_at": "2018-03-21T14:09:08Z",
      "updated_at": "2018-12-14T18:07:30Z",
      "due_on": null,
      "closed_at": null
    },
    "comments": 1,
    "created_at": "2018-12-14T14:07:13Z",
    "updated_at": "2018-12-14T15:38:42Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "body": "Right now I have to use explicitly a Groovy version in my project for extra Groovy dependencies (e.g. `groovy-dateutils`, `groovy-datetime` etc.) where I can't rely on the Spring Boot as parent, but I use its BOM for imports.\r\n\r\nIt might be the fact that there is just enough to have a `groovy-all` dependency which is now very close to the BOM structure: https://repo1.maven.org/maven2/org/codehaus/groovy/groovy-all/2.5.2/groovy-all-2.5.2.pom.\r\nWith the issue that they don't wrap dependencies into the `<dependencyManagement>` (🤷‍♂️), so, I'm not sure how to use in Maven. It works well in Gradle though... But that's already a different story and we may just list all the dependencies from there, plus `groovy-dateutils`, which enhance a `Date` class with extra `format()` and `parse()` methods. \r\n\r\nThanks"
  },
  {
    "url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15467",
    "repository_url": "https://api.github.com/repos/spring-projects/spring-boot",
    "labels_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15467/labels{/name}",
    "comments_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15467/comments",
    "events_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15467/events",
    "html_url": "https://github.com/spring-projects/spring-boot/pull/15467",
    "id": 391073194,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjM4NjkxNDU5",
    "number": 15467,
    "title": "Hibernate's dependency management is missing an entry for hibernate-vibur",
    "user": {
      "login": "slavonic-suomi",
      "id": 2613637,
      "node_id": "MDQ6VXNlcjI2MTM2Mzc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2613637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/slavonic-suomi",
      "html_url": "https://github.com/slavonic-suomi",
      "followers_url": "https://api.github.com/users/slavonic-suomi/followers",
      "following_url": "https://api.github.com/users/slavonic-suomi/following{/other_user}",
      "gists_url": "https://api.github.com/users/slavonic-suomi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/slavonic-suomi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/slavonic-suomi/subscriptions",
      "organizations_url": "https://api.github.com/users/slavonic-suomi/orgs",
      "repos_url": "https://api.github.com/users/slavonic-suomi/repos",
      "events_url": "https://api.github.com/users/slavonic-suomi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/slavonic-suomi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 16916891,
        "node_id": "MDU6TGFiZWwxNjkxNjg5MQ==",
        "url": "https://api.github.com/repos/spring-projects/spring-boot/labels/type:%20bug",
        "name": "type: bug",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": {
      "url": "https://api.github.com/repos/spring-projects/spring-boot/milestones/106",
      "html_url": "https://github.com/spring-projects/spring-boot/milestone/106",
      "labels_url": "https://api.github.com/repos/spring-projects/spring-boot/milestones/106/labels",
      "id": 3206354,
      "node_id": "MDk6TWlsZXN0b25lMzIwNjM1NA==",
      "number": 106,
      "title": "2.1.x",
      "description": "Issues that we want to solve in the 2.1.x line.\r\n\r\n",
      "creator": {
        "login": "philwebb",
        "id": 519772,
        "node_id": "MDQ6VXNlcjUxOTc3Mg==",
        "avatar_url": "https://avatars1.githubusercontent.com/u/519772?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/philwebb",
        "html_url": "https://github.com/philwebb",
        "followers_url": "https://api.github.com/users/philwebb/followers",
        "following_url": "https://api.github.com/users/philwebb/following{/other_user}",
        "gists_url": "https://api.github.com/users/philwebb/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/philwebb/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/philwebb/subscriptions",
        "organizations_url": "https://api.github.com/users/philwebb/orgs",
        "repos_url": "https://api.github.com/users/philwebb/repos",
        "events_url": "https://api.github.com/users/philwebb/events{/privacy}",
        "received_events_url": "https://api.github.com/users/philwebb/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 29,
      "closed_issues": 0,
      "state": "open",
      "created_at": "2018-03-21T14:09:08Z",
      "updated_at": "2018-12-14T18:07:30Z",
      "due_on": null,
      "closed_at": null
    },
    "comments": 2,
    "created_at": "2018-12-14T11:27:00Z",
    "updated_at": "2018-12-14T11:52:18Z",
    "closed_at": null,
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/spring-projects/spring-boot/pulls/15467",
      "html_url": "https://github.com/spring-projects/spring-boot/pull/15467",
      "diff_url": "https://github.com/spring-projects/spring-boot/pull/15467.diff",
      "patch_url": "https://github.com/spring-projects/spring-boot/pull/15467.patch"
    },
    "body": "Closed gh-15466"
  },
  {
    "url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15465",
    "repository_url": "https://api.github.com/repos/spring-projects/spring-boot",
    "labels_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15465/labels{/name}",
    "comments_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15465/comments",
    "events_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15465/events",
    "html_url": "https://github.com/spring-projects/spring-boot/pull/15465",
    "id": 391068645,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjM4Njg3ODc3",
    "number": 15465,
    "title": "Fix StringSequence.equals() for different lengths",
    "user": {
      "login": "dreis2211",
      "id": 6304496,
      "node_id": "MDQ6VXNlcjYzMDQ0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/6304496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dreis2211",
      "html_url": "https://github.com/dreis2211",
      "followers_url": "https://api.github.com/users/dreis2211/followers",
      "following_url": "https://api.github.com/users/dreis2211/following{/other_user}",
      "gists_url": "https://api.github.com/users/dreis2211/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dreis2211/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dreis2211/subscriptions",
      "organizations_url": "https://api.github.com/users/dreis2211/orgs",
      "repos_url": "https://api.github.com/users/dreis2211/repos",
      "events_url": "https://api.github.com/users/dreis2211/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dreis2211/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 293438798,
        "node_id": "MDU6TGFiZWwyOTM0Mzg3OTg=",
        "url": "https://api.github.com/repos/spring-projects/spring-boot/labels/status:%20waiting-for-triage",
        "name": "status: waiting-for-triage",
        "color": "fef2c0",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2018-12-14T11:13:11Z",
    "updated_at": "2018-12-14T11:15:13Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/spring-projects/spring-boot/pulls/15465",
      "html_url": "https://github.com/spring-projects/spring-boot/pull/15465",
      "diff_url": "https://github.com/spring-projects/spring-boot/pull/15465.diff",
      "patch_url": "https://github.com/spring-projects/spring-boot/pull/15465.patch"
    },
    "body": "Hi,\r\n\r\nwhile working on an optimization in `StringSequence.subSequence()` I noticed that `StringSequence.equals()` returns `true` for sequences with different lengths. In order to be able to easily cherry-pick that here is the isolated PR just for the fix without the optimization (on which I'd ask for feedback later in a separate PR).\r\n\r\nCheers,\r\nChristoph"
  },
  {
    "url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15462",
    "repository_url": "https://api.github.com/repos/spring-projects/spring-boot",
    "labels_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15462/labels{/name}",
    "comments_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15462/comments",
    "events_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15462/events",
    "html_url": "https://github.com/spring-projects/spring-boot/issues/15462",
    "id": 390772435,
    "node_id": "MDU6SXNzdWUzOTA3NzI0MzU=",
    "number": 15462,
    "title": "Add some logging to debug concourse cache",
    "user": {
      "login": "mbhave",
      "id": 1761408,
      "node_id": "MDQ6VXNlcjE3NjE0MDg=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1761408?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mbhave",
      "html_url": "https://github.com/mbhave",
      "followers_url": "https://api.github.com/users/mbhave/followers",
      "following_url": "https://api.github.com/users/mbhave/following{/other_user}",
      "gists_url": "https://api.github.com/users/mbhave/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mbhave/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mbhave/subscriptions",
      "organizations_url": "https://api.github.com/users/mbhave/orgs",
      "repos_url": "https://api.github.com/users/mbhave/repos",
      "events_url": "https://api.github.com/users/mbhave/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mbhave/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 69230488,
        "node_id": "MDU6TGFiZWw2OTIzMDQ4OA==",
        "url": "https://api.github.com/repos/spring-projects/spring-boot/labels/type:%20task",
        "name": "type: task",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "mbhave",
      "id": 1761408,
      "node_id": "MDQ6VXNlcjE3NjE0MDg=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1761408?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mbhave",
      "html_url": "https://github.com/mbhave",
      "followers_url": "https://api.github.com/users/mbhave/followers",
      "following_url": "https://api.github.com/users/mbhave/following{/other_user}",
      "gists_url": "https://api.github.com/users/mbhave/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mbhave/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mbhave/subscriptions",
      "organizations_url": "https://api.github.com/users/mbhave/orgs",
      "repos_url": "https://api.github.com/users/mbhave/repos",
      "events_url": "https://api.github.com/users/mbhave/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mbhave/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "mbhave",
        "id": 1761408,
        "node_id": "MDQ6VXNlcjE3NjE0MDg=",
        "avatar_url": "https://avatars0.githubusercontent.com/u/1761408?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mbhave",
        "html_url": "https://github.com/mbhave",
        "followers_url": "https://api.github.com/users/mbhave/followers",
        "following_url": "https://api.github.com/users/mbhave/following{/other_user}",
        "gists_url": "https://api.github.com/users/mbhave/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/mbhave/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mbhave/subscriptions",
        "organizations_url": "https://api.github.com/users/mbhave/orgs",
        "repos_url": "https://api.github.com/users/mbhave/repos",
        "events_url": "https://api.github.com/users/mbhave/events{/privacy}",
        "received_events_url": "https://api.github.com/users/mbhave/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/spring-projects/spring-boot/milestones/106",
      "html_url": "https://github.com/spring-projects/spring-boot/milestone/106",
      "labels_url": "https://api.github.com/repos/spring-projects/spring-boot/milestones/106/labels",
      "id": 3206354,
      "node_id": "MDk6TWlsZXN0b25lMzIwNjM1NA==",
      "number": 106,
      "title": "2.1.x",
      "description": "Issues that we want to solve in the 2.1.x line.\r\n\r\n",
      "creator": {
        "login": "philwebb",
        "id": 519772,
        "node_id": "MDQ6VXNlcjUxOTc3Mg==",
        "avatar_url": "https://avatars1.githubusercontent.com/u/519772?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/philwebb",
        "html_url": "https://github.com/philwebb",
        "followers_url": "https://api.github.com/users/philwebb/followers",
        "following_url": "https://api.github.com/users/philwebb/following{/other_user}",
        "gists_url": "https://api.github.com/users/philwebb/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/philwebb/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/philwebb/subscriptions",
        "organizations_url": "https://api.github.com/users/philwebb/orgs",
        "repos_url": "https://api.github.com/users/philwebb/repos",
        "events_url": "https://api.github.com/users/philwebb/events{/privacy}",
        "received_events_url": "https://api.github.com/users/philwebb/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 29,
      "closed_issues": 0,
      "state": "open",
      "created_at": "2018-03-21T14:09:08Z",
      "updated_at": "2018-12-14T18:07:30Z",
      "due_on": null,
      "closed_at": null
    },
    "comments": 0,
    "created_at": "2018-12-13T17:02:31Z",
    "updated_at": "2018-12-13T17:02:55Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15460",
    "repository_url": "https://api.github.com/repos/spring-projects/spring-boot",
    "labels_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15460/labels{/name}",
    "comments_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15460/comments",
    "events_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15460/events",
    "html_url": "https://github.com/spring-projects/spring-boot/issues/15460",
    "id": 390584879,
    "node_id": "MDU6SXNzdWUzOTA1ODQ4Nzk=",
    "number": 15460,
    "title": "Add wildcard support to endpoint enablement to align it with endpoint exposure",
    "user": {
      "login": "wilkinsona",
      "id": 914682,
      "node_id": "MDQ6VXNlcjkxNDY4Mg==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/914682?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wilkinsona",
      "html_url": "https://github.com/wilkinsona",
      "followers_url": "https://api.github.com/users/wilkinsona/followers",
      "following_url": "https://api.github.com/users/wilkinsona/following{/other_user}",
      "gists_url": "https://api.github.com/users/wilkinsona/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wilkinsona/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wilkinsona/subscriptions",
      "organizations_url": "https://api.github.com/users/wilkinsona/orgs",
      "repos_url": "https://api.github.com/users/wilkinsona/repos",
      "events_url": "https://api.github.com/users/wilkinsona/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wilkinsona/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 16916893,
        "node_id": "MDU6TGFiZWwxNjkxNjg5Mw==",
        "url": "https://api.github.com/repos/spring-projects/spring-boot/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2018-12-13T09:17:30Z",
    "updated_at": "2018-12-13T09:17:30Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "body": "Currently, endpoint exposure can be configured using `*` to apply to all endpoints. It would be useful to be able to do the same for enabling endpoints as it would make configure that only enables one or two endpoints more concise."
  },
  {
    "url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15457",
    "repository_url": "https://api.github.com/repos/spring-projects/spring-boot",
    "labels_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15457/labels{/name}",
    "comments_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15457/comments",
    "events_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15457/events",
    "html_url": "https://github.com/spring-projects/spring-boot/issues/15457",
    "id": 390531593,
    "node_id": "MDU6SXNzdWUzOTA1MzE1OTM=",
    "number": 15457,
    "title": "Appendix A seems to be broken in current-SNAPSHOT version",
    "user": {
      "login": "izeye",
      "id": 1059363,
      "node_id": "MDQ6VXNlcjEwNTkzNjM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1059363?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/izeye",
      "html_url": "https://github.com/izeye",
      "followers_url": "https://api.github.com/users/izeye/followers",
      "following_url": "https://api.github.com/users/izeye/following{/other_user}",
      "gists_url": "https://api.github.com/users/izeye/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/izeye/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/izeye/subscriptions",
      "organizations_url": "https://api.github.com/users/izeye/orgs",
      "repos_url": "https://api.github.com/users/izeye/repos",
      "events_url": "https://api.github.com/users/izeye/events{/privacy}",
      "received_events_url": "https://api.github.com/users/izeye/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 293438798,
        "node_id": "MDU6TGFiZWwyOTM0Mzg3OTg=",
        "url": "https://api.github.com/repos/spring-projects/spring-boot/labels/status:%20waiting-for-triage",
        "name": "status: waiting-for-triage",
        "color": "fef2c0",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-12-13T06:07:42Z",
    "updated_at": "2018-12-13T10:40:18Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "<!--\r\nThanks for raising a Spring Boot issue. Please take the time to review the following\r\ncategories as some of them do not apply here.\r\n\r\n🙅 \"Please DO NOT Raise an Issue\" Cases\r\n- Question\r\nSTOP!! Please ask questions about how to use something, or to understand why something isn't\r\nworking as you expect it to, on Stack Overflow using the spring-boot tag.\r\n- Security Vulnerability\r\nSTOP!! Please don't raise security vulnerabilities here. Head over to https://pivotal.io/security to learn how to disclose them responsibly.\r\n- Managed Dependency Upgrade\r\nYou DO NOT need to raise an issue for a managed dependency version upgrade as there's a semi-automatic process for checking managed dependencies for new versions before a release. BUT pull requests for upgrades that are more involved than just a version property change are still most welcome.\r\n- With an Immediate Pull Request\r\nAn issue will be closed as a duplicate of the immediate pull request, so you don't have to raise an issue if you plan to create a pull request immediately.\r\n\r\n🐞 Bug report (do not copy/paste)\r\nPlease provide details of the problem, including the version of Spring Boot that you\r\nare using. If possible, please provide a test case or sample application that reproduces\r\nthe problem. This makes it much easier for us to diagnose the problem and to verify that\r\nwe have fixed it.\r\n\r\n🎁 Enhancement (do not copy/paste)\r\nPlease start by describing the problem that you are trying to solve. There may already\r\nbe a solution, or there may be a way to solve it that you hadn't considered.\r\n-->\r\nI'm not sure it's working in progress but \"Appendix A\" seems to be broken to me now as follows:\r\n\r\n<img width=\"1371\" alt=\"screen shot 2018-12-13 at 3 01 34 pm\" src=\"https://user-images.githubusercontent.com/1059363/49919020-78f52680-fee8-11e8-8d12-89063b80731d.png\">\r\n\r\nI'm using Google Chrome on macOS.\r\n\r\nSee https://docs.spring.io/spring-boot/docs/current-SNAPSHOT/reference/html/appendix.html#common-application-properties"
  },
  {
    "url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15456",
    "repository_url": "https://api.github.com/repos/spring-projects/spring-boot",
    "labels_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15456/labels{/name}",
    "comments_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15456/comments",
    "events_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15456/events",
    "html_url": "https://github.com/spring-projects/spring-boot/issues/15456",
    "id": 390510251,
    "node_id": "MDU6SXNzdWUzOTA1MTAyNTE=",
    "number": 15456,
    "title": "Consider simplifying test container rules",
    "user": {
      "login": "mbhave",
      "id": 1761408,
      "node_id": "MDQ6VXNlcjE3NjE0MDg=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1761408?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mbhave",
      "html_url": "https://github.com/mbhave",
      "followers_url": "https://api.github.com/users/mbhave/followers",
      "following_url": "https://api.github.com/users/mbhave/following{/other_user}",
      "gists_url": "https://api.github.com/users/mbhave/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mbhave/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mbhave/subscriptions",
      "organizations_url": "https://api.github.com/users/mbhave/orgs",
      "repos_url": "https://api.github.com/users/mbhave/repos",
      "events_url": "https://api.github.com/users/mbhave/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mbhave/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 69230488,
        "node_id": "MDU6TGFiZWw2OTIzMDQ4OA==",
        "url": "https://api.github.com/repos/spring-projects/spring-boot/labels/type:%20task",
        "name": "type: task",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": {
      "url": "https://api.github.com/repos/spring-projects/spring-boot/milestones/126",
      "html_url": "https://github.com/spring-projects/spring-boot/milestone/126",
      "labels_url": "https://api.github.com/repos/spring-projects/spring-boot/milestones/126/labels",
      "id": 3785738,
      "node_id": "MDk6TWlsZXN0b25lMzc4NTczOA==",
      "number": 126,
      "title": "2.2.x",
      "description": "",
      "creator": {
        "login": "philwebb",
        "id": 519772,
        "node_id": "MDQ6VXNlcjUxOTc3Mg==",
        "avatar_url": "https://avatars1.githubusercontent.com/u/519772?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/philwebb",
        "html_url": "https://github.com/philwebb",
        "followers_url": "https://api.github.com/users/philwebb/followers",
        "following_url": "https://api.github.com/users/philwebb/following{/other_user}",
        "gists_url": "https://api.github.com/users/philwebb/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/philwebb/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/philwebb/subscriptions",
        "organizations_url": "https://api.github.com/users/philwebb/orgs",
        "repos_url": "https://api.github.com/users/philwebb/repos",
        "events_url": "https://api.github.com/users/philwebb/events{/privacy}",
        "received_events_url": "https://api.github.com/users/philwebb/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 26,
      "closed_issues": 0,
      "state": "open",
      "created_at": "2018-10-31T14:47:26Z",
      "updated_at": "2018-12-14T19:58:36Z",
      "due_on": null,
      "closed_at": null
    },
    "comments": 0,
    "created_at": "2018-12-13T04:09:54Z",
    "updated_at": "2018-12-13T04:10:31Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "We have a [custom rule](https://github.com/spring-projects/spring-boot/blob/master/spring-boot-project/spring-boot-tools/spring-boot-test-support/src/main/java/org/springframework/boot/testsupport/testcontainers/Container.java) for tests using testcontainers.  We could probably [simplify it](https://github.com/mbhave/spring-boot/commit/5f880395cf341f034558396203bab7281976d08e#diff-e4c25e2e6e2bdd153121e99d78e49742R38) to extend the existing `GenericContainer` rule. This might ease migration to Junit5 since we'd just have to replace `@ClassRule` with `@Container`."
  },
  {
    "url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15455",
    "repository_url": "https://api.github.com/repos/spring-projects/spring-boot",
    "labels_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15455/labels{/name}",
    "comments_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15455/comments",
    "events_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15455/events",
    "html_url": "https://github.com/spring-projects/spring-boot/issues/15455",
    "id": 390500819,
    "node_id": "MDU6SXNzdWUzOTA1MDA4MTk=",
    "number": 15455,
    "title": "Spring Boot Maven Plugin 'agent' parameter does not explain how to use multiple agents",
    "user": {
      "login": "kriegaex",
      "id": 1537384,
      "node_id": "MDQ6VXNlcjE1MzczODQ=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1537384?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kriegaex",
      "html_url": "https://github.com/kriegaex",
      "followers_url": "https://api.github.com/users/kriegaex/followers",
      "following_url": "https://api.github.com/users/kriegaex/following{/other_user}",
      "gists_url": "https://api.github.com/users/kriegaex/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kriegaex/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kriegaex/subscriptions",
      "organizations_url": "https://api.github.com/users/kriegaex/orgs",
      "repos_url": "https://api.github.com/users/kriegaex/repos",
      "events_url": "https://api.github.com/users/kriegaex/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kriegaex/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 16916893,
        "node_id": "MDU6TGFiZWwxNjkxNjg5Mw==",
        "url": "https://api.github.com/repos/spring-projects/spring-boot/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": {
      "url": "https://api.github.com/repos/spring-projects/spring-boot/milestones/126",
      "html_url": "https://github.com/spring-projects/spring-boot/milestone/126",
      "labels_url": "https://api.github.com/repos/spring-projects/spring-boot/milestones/126/labels",
      "id": 3785738,
      "node_id": "MDk6TWlsZXN0b25lMzc4NTczOA==",
      "number": 126,
      "title": "2.2.x",
      "description": "",
      "creator": {
        "login": "philwebb",
        "id": 519772,
        "node_id": "MDQ6VXNlcjUxOTc3Mg==",
        "avatar_url": "https://avatars1.githubusercontent.com/u/519772?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/philwebb",
        "html_url": "https://github.com/philwebb",
        "followers_url": "https://api.github.com/users/philwebb/followers",
        "following_url": "https://api.github.com/users/philwebb/following{/other_user}",
        "gists_url": "https://api.github.com/users/philwebb/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/philwebb/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/philwebb/subscriptions",
        "organizations_url": "https://api.github.com/users/philwebb/orgs",
        "repos_url": "https://api.github.com/users/philwebb/repos",
        "events_url": "https://api.github.com/users/philwebb/events{/privacy}",
        "received_events_url": "https://api.github.com/users/philwebb/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 26,
      "closed_issues": 0,
      "state": "open",
      "created_at": "2018-10-31T14:47:26Z",
      "updated_at": "2018-12-14T19:58:36Z",
      "due_on": null,
      "closed_at": null
    },
    "comments": 1,
    "created_at": "2018-12-13T03:17:37Z",
    "updated_at": "2018-12-14T16:24:28Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "From the plugin documentation, it is unclear how to actually add multiple Java agents to the command line, even though `agent` permits an array of file names, see also my [answer](https://stackoverflow.com/a/53754498/1082681) to a corresponding StackOverflow question for more details. The strangest part is that `agent` is a singular word and not the expected plural `agents`, which would imply that inside you could list agents using `agent`. But in this case the singular is the list element. I found out that I can just invent any subtag name in order to list multiple agents, but this is neither documented nor intuitive. I know it would be a breaking change to rename the parameter to its plural form, but maybe you could add an alias and then deprecate the singular name and also explain how to use multiple agents in the plugin documentation and/or in an example. The way it is now just keeps people guessing. I also did not find any integration or unit test case for it in the code base."
  },
  {
    "url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15452",
    "repository_url": "https://api.github.com/repos/spring-projects/spring-boot",
    "labels_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15452/labels{/name}",
    "comments_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15452/comments",
    "events_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15452/events",
    "html_url": "https://github.com/spring-projects/spring-boot/issues/15452",
    "id": 390374079,
    "node_id": "MDU6SXNzdWUzOTAzNzQwNzk=",
    "number": 15452,
    "title": "MatrixVariable position with Tomcat and Undertow",
    "user": {
      "login": "sydneyhenrard",
      "id": 5309640,
      "node_id": "MDQ6VXNlcjUzMDk2NDA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/5309640?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sydneyhenrard",
      "html_url": "https://github.com/sydneyhenrard",
      "followers_url": "https://api.github.com/users/sydneyhenrard/followers",
      "following_url": "https://api.github.com/users/sydneyhenrard/following{/other_user}",
      "gists_url": "https://api.github.com/users/sydneyhenrard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sydneyhenrard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sydneyhenrard/subscriptions",
      "organizations_url": "https://api.github.com/users/sydneyhenrard/orgs",
      "repos_url": "https://api.github.com/users/sydneyhenrard/repos",
      "events_url": "https://api.github.com/users/sydneyhenrard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sydneyhenrard/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 293438798,
        "node_id": "MDU6TGFiZWwyOTM0Mzg3OTg=",
        "url": "https://api.github.com/repos/spring-projects/spring-boot/labels/status:%20waiting-for-triage",
        "name": "status: waiting-for-triage",
        "color": "fef2c0",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "bclozel",
      "id": 103264,
      "node_id": "MDQ6VXNlcjEwMzI2NA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/103264?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bclozel",
      "html_url": "https://github.com/bclozel",
      "followers_url": "https://api.github.com/users/bclozel/followers",
      "following_url": "https://api.github.com/users/bclozel/following{/other_user}",
      "gists_url": "https://api.github.com/users/bclozel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bclozel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bclozel/subscriptions",
      "organizations_url": "https://api.github.com/users/bclozel/orgs",
      "repos_url": "https://api.github.com/users/bclozel/repos",
      "events_url": "https://api.github.com/users/bclozel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bclozel/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "bclozel",
        "id": 103264,
        "node_id": "MDQ6VXNlcjEwMzI2NA==",
        "avatar_url": "https://avatars2.githubusercontent.com/u/103264?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bclozel",
        "html_url": "https://github.com/bclozel",
        "followers_url": "https://api.github.com/users/bclozel/followers",
        "following_url": "https://api.github.com/users/bclozel/following{/other_user}",
        "gists_url": "https://api.github.com/users/bclozel/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bclozel/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bclozel/subscriptions",
        "organizations_url": "https://api.github.com/users/bclozel/orgs",
        "repos_url": "https://api.github.com/users/bclozel/repos",
        "events_url": "https://api.github.com/users/bclozel/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bclozel/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2018-12-12T19:27:11Z",
    "updated_at": "2018-12-13T10:23:03Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "I defined a REST endpoint that accepts a `MatrixVariable`. I did some testing, and concluded that the `MatrixVariable` is not processed the same way depending on the container. The v1 endpoint ends with a \"static\" path, whereas the v2 endpoint ends with a `PathVariable`.\r\n\r\n```\r\n@RestController\r\npublic class BugResource {\r\n    @GetMapping(value = \"/v1/{a}/plus/{b}/equal\", produces = MediaType.APPLICATION_JSON_VALUE)\r\n    public ResponseEntity<String> bug(\r\n            @PathVariable String a,\r\n            @PathVariable String b,\r\n            @MatrixVariable(required = false) String matrix\r\n    ) {\r\n        return ResponseEntity.ok(a + \" \" + b + \" \" + matrix);\r\n    }\r\n\r\n    @GetMapping(value = \"/v2/{a}/plus/{b}\", produces = MediaType.APPLICATION_JSON_VALUE)\r\n    public ResponseEntity<String> bug2(\r\n            @PathVariable String a,\r\n            @PathVariable String b,\r\n            @MatrixVariable(required = false) String matrix\r\n    ) {\r\n        return ResponseEntity.ok(a + \" \" + b + \" \" + matrix);\r\n    }\r\n}\r\n```\r\n\r\nThen I tried to call the REST endpoint:\r\n\r\n**with Tomcat**\r\nhttp://localhost:8080/v1/a;matrix=matrix/plus/b/equal => 200\r\nhttp://localhost:8080/v1/a/plus/b;matrix=matrix/equal => 200\r\nhttp://localhost:8080/v2/a/plus/b;matrix=matrix => 200\r\nhttp://localhost:8080/v2/a;matrix=matrix/plus/b => 200\r\n\r\n**with Undertow**\r\nhttp://localhost:8080/v1/a;matrix=matrix/plus/b/equal => 404\r\nhttp://localhost:8080/v1/a/plus/b;matrix=matrix/equal => 404\r\nhttp://localhost:8080/v2/a/plus/b;matrix=matrix => 200\r\nhttp://localhost:8080/v2/a;matrix=matrix/plus/b => 404\r\n\r\nSo it seems that Undertow only deals with `MatrixVariable` when the endpoint ends with a `PathVariable`, and the `MatrixVariable` is placed at the end of the endpoint\r\n\r\nTo reproduce, I just created a Spring Initializr maven project:\r\n```\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n    <modelVersion>4.0.0</modelVersion>\r\n    <parent>\r\n        <groupId>org.springframework.boot</groupId>\r\n        <artifactId>spring-boot-starter-parent</artifactId>\r\n        <version>2.1.1.RELEASE</version>\r\n        <relativePath/> <!-- lookup parent from repository -->\r\n    </parent>\r\n    <groupId>com.example</groupId>\r\n    <artifactId>matrixparam</artifactId>\r\n    <version>0.0.1-SNAPSHOT</version>\r\n    <packaging>jar</packaging>\r\n    <name>matrixparam</name>\r\n    <description>Demo project for Spring Boot</description>\r\n    <properties>\r\n        <java.version>1.8</java.version>\r\n    </properties>\r\n    <dependencies>\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-web</artifactId>\r\n            <exclusions>\r\n                <exclusion>\r\n                    <groupId>org.springframework.boot</groupId>\r\n                    <artifactId>spring-boot-starter-tomcat</artifactId>\r\n                </exclusion>\r\n            </exclusions>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-undertow</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-test</artifactId>\r\n            <scope>test</scope>\r\n        </dependency>\r\n    </dependencies>\r\n    <build>\r\n        <plugins>\r\n            <plugin>\r\n                <groupId>org.springframework.boot</groupId>\r\n                <artifactId>spring-boot-maven-plugin</artifactId>\r\n            </plugin>\r\n        </plugins>\r\n    </build>\r\n</project>\r\n```\r\n\r\nThe configuration to enable `MatrixVariable`:\r\n```\r\n@Configuration\r\npublic class WebConfig implements WebMvcConfigurer {\r\n    @Override\r\n    public void configurePathMatch(PathMatchConfigurer configurer) {\r\n        UrlPathHelper urlPathHelper = new UrlPathHelper();\r\n        urlPathHelper.setRemoveSemicolonContent(false);\r\n        configurer.setUrlPathHelper(urlPathHelper);\r\n    }\r\n}\r\n```"
  },
  {
    "url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15451",
    "repository_url": "https://api.github.com/repos/spring-projects/spring-boot",
    "labels_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15451/labels{/name}",
    "comments_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15451/comments",
    "events_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15451/events",
    "html_url": "https://github.com/spring-projects/spring-boot/issues/15451",
    "id": 390341754,
    "node_id": "MDU6SXNzdWUzOTAzNDE3NTQ=",
    "number": 15451,
    "title": "Review use of @ConditionalOnEnabledEndpoint on @Bean methods and move to @Configuration class where appropriate",
    "user": {
      "login": "wilkinsona",
      "id": 914682,
      "node_id": "MDQ6VXNlcjkxNDY4Mg==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/914682?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wilkinsona",
      "html_url": "https://github.com/wilkinsona",
      "followers_url": "https://api.github.com/users/wilkinsona/followers",
      "following_url": "https://api.github.com/users/wilkinsona/following{/other_user}",
      "gists_url": "https://api.github.com/users/wilkinsona/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wilkinsona/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wilkinsona/subscriptions",
      "organizations_url": "https://api.github.com/users/wilkinsona/orgs",
      "repos_url": "https://api.github.com/users/wilkinsona/repos",
      "events_url": "https://api.github.com/users/wilkinsona/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wilkinsona/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 872349384,
        "node_id": "MDU6TGFiZWw4NzIzNDkzODQ=",
        "url": "https://api.github.com/repos/spring-projects/spring-boot/labels/theme:%20performance",
        "name": "theme: performance",
        "color": "f9d0c4",
        "default": false
      },
      {
        "id": 69230488,
        "node_id": "MDU6TGFiZWw2OTIzMDQ4OA==",
        "url": "https://api.github.com/repos/spring-projects/spring-boot/labels/type:%20task",
        "name": "type: task",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": {
      "url": "https://api.github.com/repos/spring-projects/spring-boot/milestones/106",
      "html_url": "https://github.com/spring-projects/spring-boot/milestone/106",
      "labels_url": "https://api.github.com/repos/spring-projects/spring-boot/milestones/106/labels",
      "id": 3206354,
      "node_id": "MDk6TWlsZXN0b25lMzIwNjM1NA==",
      "number": 106,
      "title": "2.1.x",
      "description": "Issues that we want to solve in the 2.1.x line.\r\n\r\n",
      "creator": {
        "login": "philwebb",
        "id": 519772,
        "node_id": "MDQ6VXNlcjUxOTc3Mg==",
        "avatar_url": "https://avatars1.githubusercontent.com/u/519772?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/philwebb",
        "html_url": "https://github.com/philwebb",
        "followers_url": "https://api.github.com/users/philwebb/followers",
        "following_url": "https://api.github.com/users/philwebb/following{/other_user}",
        "gists_url": "https://api.github.com/users/philwebb/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/philwebb/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/philwebb/subscriptions",
        "organizations_url": "https://api.github.com/users/philwebb/orgs",
        "repos_url": "https://api.github.com/users/philwebb/repos",
        "events_url": "https://api.github.com/users/philwebb/events{/privacy}",
        "received_events_url": "https://api.github.com/users/philwebb/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 29,
      "closed_issues": 0,
      "state": "open",
      "created_at": "2018-03-21T14:09:08Z",
      "updated_at": "2018-12-14T18:07:30Z",
      "due_on": null,
      "closed_at": null
    },
    "comments": 3,
    "created_at": "2018-12-12T17:57:45Z",
    "updated_at": "2018-12-13T10:43:16Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "body": "Spotted by @dsyer, we're creating some configuration classes unnecessarily. For example:\r\n\r\n```java\r\n@Configuration\r\npublic class BeansEndpointAutoConfiguration {\r\n\r\n\t@Bean\r\n\t@ConditionalOnMissingBean\r\n\t@ConditionalOnEnabledEndpoint\r\n\tpublic BeansEndpoint beansEndpoint(\r\n\t\t\tConfigurableApplicationContext applicationContext) {\r\n\t\treturn new BeansEndpoint(applicationContext);\r\n\t}\r\n\r\n}\r\n```\r\n\r\nWe should move `@ConditionalOnEnabledEndpoint` from the bean method to the configuration class where appropriate."
  },
  {
    "url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15450",
    "repository_url": "https://api.github.com/repos/spring-projects/spring-boot",
    "labels_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15450/labels{/name}",
    "comments_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15450/comments",
    "events_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15450/events",
    "html_url": "https://github.com/spring-projects/spring-boot/issues/15450",
    "id": 390297524,
    "node_id": "MDU6SXNzdWUzOTAyOTc1MjQ=",
    "number": 15450,
    "title": "Update migration guide to document need for a DispatcherServletPath bean when using a custom dispatcher servlet registration",
    "user": {
      "login": "Puspendert",
      "id": 16055344,
      "node_id": "MDQ6VXNlcjE2MDU1MzQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/16055344?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Puspendert",
      "html_url": "https://github.com/Puspendert",
      "followers_url": "https://api.github.com/users/Puspendert/followers",
      "following_url": "https://api.github.com/users/Puspendert/following{/other_user}",
      "gists_url": "https://api.github.com/users/Puspendert/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Puspendert/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Puspendert/subscriptions",
      "organizations_url": "https://api.github.com/users/Puspendert/orgs",
      "repos_url": "https://api.github.com/users/Puspendert/repos",
      "events_url": "https://api.github.com/users/Puspendert/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Puspendert/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1057143703,
        "node_id": "MDU6TGFiZWwxMDU3MTQzNzAz",
        "url": "https://api.github.com/repos/spring-projects/spring-boot/labels/type:%20wiki-documentation",
        "name": "type: wiki-documentation",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": {
      "url": "https://api.github.com/repos/spring-projects/spring-boot/milestones/104",
      "html_url": "https://github.com/spring-projects/spring-boot/milestone/104",
      "labels_url": "https://api.github.com/repos/spring-projects/spring-boot/milestones/104/labels",
      "id": 3206272,
      "node_id": "MDk6TWlsZXN0b25lMzIwNjI3Mg==",
      "number": 104,
      "title": "2.0.x",
      "description": "Issues that we want to solve in the 2.0.x line.",
      "creator": {
        "login": "philwebb",
        "id": 519772,
        "node_id": "MDQ6VXNlcjUxOTc3Mg==",
        "avatar_url": "https://avatars1.githubusercontent.com/u/519772?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/philwebb",
        "html_url": "https://github.com/philwebb",
        "followers_url": "https://api.github.com/users/philwebb/followers",
        "following_url": "https://api.github.com/users/philwebb/following{/other_user}",
        "gists_url": "https://api.github.com/users/philwebb/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/philwebb/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/philwebb/subscriptions",
        "organizations_url": "https://api.github.com/users/philwebb/orgs",
        "repos_url": "https://api.github.com/users/philwebb/repos",
        "events_url": "https://api.github.com/users/philwebb/events{/privacy}",
        "received_events_url": "https://api.github.com/users/philwebb/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 5,
      "closed_issues": 0,
      "state": "open",
      "created_at": "2018-03-21T13:49:34Z",
      "updated_at": "2018-12-14T07:45:42Z",
      "due_on": null,
      "closed_at": null
    },
    "comments": 4,
    "created_at": "2018-12-12T16:11:18Z",
    "updated_at": "2018-12-12T18:07:30Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "I was using boot `2.0.1.RELEASE` and configured the dispacther servlet as below:\r\n```\r\n@Configuration\r\npublic class ServletConfig {\r\n\r\n    @Bean\r\n    public DispatcherServlet dispatcherServlet() {\r\n        return new DispatcherServlet();\r\n    }\r\n\r\n    @Bean\r\n    public ServletRegistrationBean<DispatcherServlet> dispatcherServletRegistration() {\r\n        final ServletRegistrationBean<DispatcherServlet> registration = new ServletRegistrationBean<>(dispatcherServlet(), \"api/v1/*\");\r\n\r\n        final Map<String, String> params = new HashMap<String, String>();\r\n        params.put(\"contextClass\", \"org.springframework.web.context.support.AnnotationConfigWebApplicationContext\");\r\n        params.put(\"contextConfigLocation\", \"org.spring.sec2.spring\");\r\n        params.put(\"dispatchOptionsRequest\", \"true\");\r\n        registration.setInitParameters(params);\r\n\r\n        registration.setLoadOnStartup(1);\r\n        return registration;\r\n    }\r\n}\r\n```\r\nEverythings is working with `2.0.1.RELEASE`\r\n\r\nBut when I upgrade the boot version to `2.1.1.RELEASE` I get the following error:\r\n```Parameter 1 of constructor in org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration required a bean of type 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath' that could not be found.\r\n\r\nThe following candidates were found but could not be injected:\r\n\t- Bean method 'dispatcherServletRegistration' in 'DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration' not loaded because DispatcherServlet Registration found servlet registration bean dispatcherServletRegistration\r\n\r\n\r\nAction:\r\n\r\nConsider revisiting the entries above or defining a bean of type 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath' in your configuration.\r\n```\r\nIts a maven multi module project and I am using `spring-boot-starter-parent`\r\n```\t\r\n<parent>\r\n\t<groupId>org.springframework.boot</groupId>\r\n\t<artifactId>spring-boot-starter-parent</artifactId>\r\n\t<version>2.1.1.RELEASE</version>\r\n</parent>```"
  },
  {
    "url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15448",
    "repository_url": "https://api.github.com/repos/spring-projects/spring-boot",
    "labels_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15448/labels{/name}",
    "comments_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15448/comments",
    "events_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15448/events",
    "html_url": "https://github.com/spring-projects/spring-boot/issues/15448",
    "id": 390192024,
    "node_id": "MDU6SXNzdWUzOTAxOTIwMjQ=",
    "number": 15448,
    "title": "Provide properties 'server.tomcat.scheme' and 'server.tomcat.secure' in application.properties for TLS/SSL offloading",
    "user": {
      "login": "bthalmayr",
      "id": 683897,
      "node_id": "MDQ6VXNlcjY4Mzg5Nw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/683897?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bthalmayr",
      "html_url": "https://github.com/bthalmayr",
      "followers_url": "https://api.github.com/users/bthalmayr/followers",
      "following_url": "https://api.github.com/users/bthalmayr/following{/other_user}",
      "gists_url": "https://api.github.com/users/bthalmayr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bthalmayr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bthalmayr/subscriptions",
      "organizations_url": "https://api.github.com/users/bthalmayr/orgs",
      "repos_url": "https://api.github.com/users/bthalmayr/repos",
      "events_url": "https://api.github.com/users/bthalmayr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bthalmayr/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 97741072,
        "node_id": "MDU6TGFiZWw5Nzc0MTA3Mg==",
        "url": "https://api.github.com/repos/spring-projects/spring-boot/labels/status:%20waiting-for-feedback",
        "name": "status: waiting-for-feedback",
        "color": "fef2c0",
        "default": false
      },
      {
        "id": 293438798,
        "node_id": "MDU6TGFiZWwyOTM0Mzg3OTg=",
        "url": "https://api.github.com/repos/spring-projects/spring-boot/labels/status:%20waiting-for-triage",
        "name": "status: waiting-for-triage",
        "color": "fef2c0",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-12-12T11:53:57Z",
    "updated_at": "2018-12-12T17:01:31Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "When TLS/SSL is offloaded at an hardward loadbalancer or and HTTP reverse-proxy server,  Tomcat does not have any clue about this.\r\nIf a web-application uses the API call `HttpServletRequest.getRequestURL() `(https://tomcat.apache.org/tomcat-9.0-doc/servletapi/javax/servlet/http/HttpServletRequest.html#getRequestURL--), it will get `http://HOST_HEADER....`\r\nThis causes troubles, e.g. with Spring Security SAML extension / OpenSAML as the URL is checked against SAML meta data where the Assertion Consumer Service URL is configured starting with scheme `https`.\r\n\r\nIn a _standalone_ Tomcat deployment, this is fixed by configuring the Tomcat HTTP connector accordingly. Therefor the Tomcat HTTP connector allows so set properties `scheme` and `secure` (https://tomcat.apache.org/tomcat-9.0-doc/config/http.html#Common_Attributes).\r\n\r\nUsing `server.use-forward-headers=true` and setting HTTP request header `X-Forwarded-Proto=https ` at the LB / HTTP RP does not help in case of Spring Security SAML extension. The only chance to make this work is to implement a custom `org.springframework.boot.web.server.WebServerFactoryCustomizer` "
  },
  {
    "url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15447",
    "repository_url": "https://api.github.com/repos/spring-projects/spring-boot",
    "labels_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15447/labels{/name}",
    "comments_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15447/comments",
    "events_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15447/events",
    "html_url": "https://github.com/spring-projects/spring-boot/issues/15447",
    "id": 390132020,
    "node_id": "MDU6SXNzdWUzOTAxMzIwMjA=",
    "number": 15447,
    "title": "Improve TaskExecution documentation with custom Executor and Spring MVC",
    "user": {
      "login": "StasKolodyuk",
      "id": 7199271,
      "node_id": "MDQ6VXNlcjcxOTkyNzE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/7199271?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/StasKolodyuk",
      "html_url": "https://github.com/StasKolodyuk",
      "followers_url": "https://api.github.com/users/StasKolodyuk/followers",
      "following_url": "https://api.github.com/users/StasKolodyuk/following{/other_user}",
      "gists_url": "https://api.github.com/users/StasKolodyuk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/StasKolodyuk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/StasKolodyuk/subscriptions",
      "organizations_url": "https://api.github.com/users/StasKolodyuk/orgs",
      "repos_url": "https://api.github.com/users/StasKolodyuk/repos",
      "events_url": "https://api.github.com/users/StasKolodyuk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/StasKolodyuk/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 67950315,
        "node_id": "MDU6TGFiZWw2Nzk1MDMxNQ==",
        "url": "https://api.github.com/repos/spring-projects/spring-boot/labels/type:%20documentation",
        "name": "type: documentation",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": {
      "url": "https://api.github.com/repos/spring-projects/spring-boot/milestones/106",
      "html_url": "https://github.com/spring-projects/spring-boot/milestone/106",
      "labels_url": "https://api.github.com/repos/spring-projects/spring-boot/milestones/106/labels",
      "id": 3206354,
      "node_id": "MDk6TWlsZXN0b25lMzIwNjM1NA==",
      "number": 106,
      "title": "2.1.x",
      "description": "Issues that we want to solve in the 2.1.x line.\r\n\r\n",
      "creator": {
        "login": "philwebb",
        "id": 519772,
        "node_id": "MDQ6VXNlcjUxOTc3Mg==",
        "avatar_url": "https://avatars1.githubusercontent.com/u/519772?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/philwebb",
        "html_url": "https://github.com/philwebb",
        "followers_url": "https://api.github.com/users/philwebb/followers",
        "following_url": "https://api.github.com/users/philwebb/following{/other_user}",
        "gists_url": "https://api.github.com/users/philwebb/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/philwebb/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/philwebb/subscriptions",
        "organizations_url": "https://api.github.com/users/philwebb/orgs",
        "repos_url": "https://api.github.com/users/philwebb/repos",
        "events_url": "https://api.github.com/users/philwebb/events{/privacy}",
        "received_events_url": "https://api.github.com/users/philwebb/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 29,
      "closed_issues": 0,
      "state": "open",
      "created_at": "2018-03-21T14:09:08Z",
      "updated_at": "2018-12-14T18:07:30Z",
      "due_on": null,
      "closed_at": null
    },
    "comments": 6,
    "created_at": "2018-12-12T09:18:11Z",
    "updated_at": "2018-12-12T13:40:34Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "Hi!\r\n\r\nIf you declare any `Executor` in Spring Context it is picked up by `TaskExecutionAutoConfiguration` due to:\r\n```\r\n@Lazy\r\n@Bean(name = APPLICATION_TASK_EXECUTOR_BEAN_NAME)\r\n@ConditionalOnMissingBean(Executor.class)\r\npublic ThreadPoolTaskExecutor applicationTaskExecutor(TaskExecutorBuilder builder) {\r\n\treturn builder.build();\r\n}\r\n```\r\nIf using in conjunction with `spring-boot-starter-webflux`, this leads to usage of your custom executor by `WebMvcAutoConfiguration.configureAsyncSupport()` and then by `ReactiveTypeHandler` printing the error.\r\n\r\n```\r\n2018-12-11 19:05:10.174  WARN 1612 --- [nio-9015-exec-1] o.s.w.s.m.m.a.ReactiveTypeHandler        :\r\n!!!\r\nStreaming through a reactive type requires an Executor to write to the response.\r\nPlease, configure a TaskExecutor in the MVC config under \"async support\".\r\nThe SimpleAsyncTaskExecutor currently in use is not suitable under load.\r\n-------------------------------\r\nController:\tcom.example.executorissue.controller.EchoController\r\nMethod:\t\techo\r\nReturning:\treactor.core.publisher.Flux<java.lang.String>\r\n!!!\r\n```\r\n\r\nMaybe it makes sense to use `@ConditionalOnMissingBean(name = APPLICATION_TASK_EXECUTOR_BEAN_NAME)` to allow custom Executors be created in Spring context and not being picked up by `TaskExecutionAutoConfiguration`?\r\n\r\nSee the example [here](https://github.com/spring-projects/spring-boot-issues/pull/84)\r\n\r\nThanks"
  },
  {
    "url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15446",
    "repository_url": "https://api.github.com/repos/spring-projects/spring-boot",
    "labels_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15446/labels{/name}",
    "comments_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15446/comments",
    "events_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15446/events",
    "html_url": "https://github.com/spring-projects/spring-boot/issues/15446",
    "id": 390110530,
    "node_id": "MDU6SXNzdWUzOTAxMTA1MzA=",
    "number": 15446,
    "title": "Transparently integrate Flyway 6.0's support JavaMigration instances created by DI frameworks",
    "user": {
      "login": "axelfontaine",
      "id": 684824,
      "node_id": "MDQ6VXNlcjY4NDgyNA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/684824?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axelfontaine",
      "html_url": "https://github.com/axelfontaine",
      "followers_url": "https://api.github.com/users/axelfontaine/followers",
      "following_url": "https://api.github.com/users/axelfontaine/following{/other_user}",
      "gists_url": "https://api.github.com/users/axelfontaine/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axelfontaine/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axelfontaine/subscriptions",
      "organizations_url": "https://api.github.com/users/axelfontaine/orgs",
      "repos_url": "https://api.github.com/users/axelfontaine/repos",
      "events_url": "https://api.github.com/users/axelfontaine/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axelfontaine/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 16916893,
        "node_id": "MDU6TGFiZWwxNjkxNjg5Mw==",
        "url": "https://api.github.com/repos/spring-projects/spring-boot/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": {
      "url": "https://api.github.com/repos/spring-projects/spring-boot/milestones/126",
      "html_url": "https://github.com/spring-projects/spring-boot/milestone/126",
      "labels_url": "https://api.github.com/repos/spring-projects/spring-boot/milestones/126/labels",
      "id": 3785738,
      "node_id": "MDk6TWlsZXN0b25lMzc4NTczOA==",
      "number": 126,
      "title": "2.2.x",
      "description": "",
      "creator": {
        "login": "philwebb",
        "id": 519772,
        "node_id": "MDQ6VXNlcjUxOTc3Mg==",
        "avatar_url": "https://avatars1.githubusercontent.com/u/519772?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/philwebb",
        "html_url": "https://github.com/philwebb",
        "followers_url": "https://api.github.com/users/philwebb/followers",
        "following_url": "https://api.github.com/users/philwebb/following{/other_user}",
        "gists_url": "https://api.github.com/users/philwebb/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/philwebb/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/philwebb/subscriptions",
        "organizations_url": "https://api.github.com/users/philwebb/orgs",
        "repos_url": "https://api.github.com/users/philwebb/repos",
        "events_url": "https://api.github.com/users/philwebb/events{/privacy}",
        "received_events_url": "https://api.github.com/users/philwebb/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 26,
      "closed_issues": 0,
      "state": "open",
      "created_at": "2018-10-31T14:47:26Z",
      "updated_at": "2018-12-14T19:58:36Z",
      "due_on": null,
      "closed_at": null
    },
    "comments": 0,
    "created_at": "2018-12-12T08:15:33Z",
    "updated_at": "2018-12-14T06:30:47Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "Starting with Flyway 6.0 (due out in Q1 2019), Spring users can use this to automatically use all `JavaMigration` Spring beans with Flyway:\r\n\r\n```java\r\nimport org.flywaydb.core.Flyway;\r\nimport org.flywaydb.core.api.migration.JavaMigration;\r\nimport org.springframework.context.ApplicationContext;\r\n\r\n...\r\nApplicationContext applicationContext = ...; // obtain a reference to Spring's ApplicationContext.\r\n\r\nFlyway flyway = Flyway.configure()\r\n    .dataSource(url, user, password)\r\n    // Add all Spring-instantiated JavaMigration beans\r\n    .javaMigrations(applicationContext.getBeansOfType(JavaMigration.class).values().toArray(new JavaMigration[0]))\r\n    .load();\r\nflyway.migrate();\r\n```\r\n\r\nSpring Boot is most certainly able to make this fully transparent for its users.\r\n\r\nReferences:\r\n- https://github.com/flyway/flyway/issues/1062#issuecomment-446279678\r\n- https://twitter.com/snicoll/status/1072755676923998208"
  },
  {
    "url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15445",
    "repository_url": "https://api.github.com/repos/spring-projects/spring-boot",
    "labels_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15445/labels{/name}",
    "comments_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15445/comments",
    "events_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15445/events",
    "html_url": "https://github.com/spring-projects/spring-boot/issues/15445",
    "id": 389934178,
    "node_id": "MDU6SXNzdWUzODk5MzQxNzg=",
    "number": 15445,
    "title": "spring.profiles.active from defaultProperties takes precedence over config files",
    "user": {
      "login": "mbhave",
      "id": 1761408,
      "node_id": "MDQ6VXNlcjE3NjE0MDg=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1761408?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mbhave",
      "html_url": "https://github.com/mbhave",
      "followers_url": "https://api.github.com/users/mbhave/followers",
      "following_url": "https://api.github.com/users/mbhave/following{/other_user}",
      "gists_url": "https://api.github.com/users/mbhave/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mbhave/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mbhave/subscriptions",
      "organizations_url": "https://api.github.com/users/mbhave/orgs",
      "repos_url": "https://api.github.com/users/mbhave/repos",
      "events_url": "https://api.github.com/users/mbhave/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mbhave/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1130210432,
        "node_id": "MDU6TGFiZWwxMTMwMjEwNDMy",
        "url": "https://api.github.com/repos/spring-projects/spring-boot/labels/for:%20team-meeting",
        "name": "for: team-meeting",
        "color": "c5def5",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2018-12-11T20:12:24Z",
    "updated_at": "2018-12-14T16:25:12Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "The documentation states that Default properties (specified by setting `SpringApplication.setDefaultProperties`) has the lowest precedence. This happens because the `ConfigFileApplicationListener` runs after the `defaultProperties` property source has been added to the environment. The listener only adds active profiles from the config files to the environment if none are already present in the environment."
  },
  {
    "url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15444",
    "repository_url": "https://api.github.com/repos/spring-projects/spring-boot",
    "labels_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15444/labels{/name}",
    "comments_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15444/comments",
    "events_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15444/events",
    "html_url": "https://github.com/spring-projects/spring-boot/issues/15444",
    "id": 389853881,
    "node_id": "MDU6SXNzdWUzODk4NTM4ODE=",
    "number": 15444,
    "title": "Private class in JsonTestersAutoConfiguration prevents it from being \"functionalized\"",
    "user": {
      "login": "dsyer",
      "id": 124075,
      "node_id": "MDQ6VXNlcjEyNDA3NQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/124075?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsyer",
      "html_url": "https://github.com/dsyer",
      "followers_url": "https://api.github.com/users/dsyer/followers",
      "following_url": "https://api.github.com/users/dsyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsyer/subscriptions",
      "organizations_url": "https://api.github.com/users/dsyer/orgs",
      "repos_url": "https://api.github.com/users/dsyer/repos",
      "events_url": "https://api.github.com/users/dsyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 293438798,
        "node_id": "MDU6TGFiZWwyOTM0Mzg3OTg=",
        "url": "https://api.github.com/repos/spring-projects/spring-boot/labels/status:%20waiting-for-triage",
        "name": "status: waiting-for-triage",
        "color": "fef2c0",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2018-12-11T16:43:41Z",
    "updated_at": "2018-12-12T14:48:33Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "body": "There's a private inner class in the public API of `JsonTestersAutoConfiguration` which I have to copy (making it hard to automate) to create a functional bean representation. If it was package private that would be fine."
  },
  {
    "url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15443",
    "repository_url": "https://api.github.com/repos/spring-projects/spring-boot",
    "labels_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15443/labels{/name}",
    "comments_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15443/comments",
    "events_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15443/events",
    "html_url": "https://github.com/spring-projects/spring-boot/issues/15443",
    "id": 389784323,
    "node_id": "MDU6SXNzdWUzODk3ODQzMjM=",
    "number": 15443,
    "title": "TestRestTemplate.withBasicAuth resets custom requestFactory",
    "user": {
      "login": "larsgrefer",
      "id": 6069961,
      "node_id": "MDQ6VXNlcjYwNjk5NjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/6069961?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/larsgrefer",
      "html_url": "https://github.com/larsgrefer",
      "followers_url": "https://api.github.com/users/larsgrefer/followers",
      "following_url": "https://api.github.com/users/larsgrefer/following{/other_user}",
      "gists_url": "https://api.github.com/users/larsgrefer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/larsgrefer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/larsgrefer/subscriptions",
      "organizations_url": "https://api.github.com/users/larsgrefer/orgs",
      "repos_url": "https://api.github.com/users/larsgrefer/repos",
      "events_url": "https://api.github.com/users/larsgrefer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/larsgrefer/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 16916891,
        "node_id": "MDU6TGFiZWwxNjkxNjg5MQ==",
        "url": "https://api.github.com/repos/spring-projects/spring-boot/labels/type:%20bug",
        "name": "type: bug",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": {
      "url": "https://api.github.com/repos/spring-projects/spring-boot/milestones/106",
      "html_url": "https://github.com/spring-projects/spring-boot/milestone/106",
      "labels_url": "https://api.github.com/repos/spring-projects/spring-boot/milestones/106/labels",
      "id": 3206354,
      "node_id": "MDk6TWlsZXN0b25lMzIwNjM1NA==",
      "number": 106,
      "title": "2.1.x",
      "description": "Issues that we want to solve in the 2.1.x line.\r\n\r\n",
      "creator": {
        "login": "philwebb",
        "id": 519772,
        "node_id": "MDQ6VXNlcjUxOTc3Mg==",
        "avatar_url": "https://avatars1.githubusercontent.com/u/519772?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/philwebb",
        "html_url": "https://github.com/philwebb",
        "followers_url": "https://api.github.com/users/philwebb/followers",
        "following_url": "https://api.github.com/users/philwebb/following{/other_user}",
        "gists_url": "https://api.github.com/users/philwebb/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/philwebb/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/philwebb/subscriptions",
        "organizations_url": "https://api.github.com/users/philwebb/orgs",
        "repos_url": "https://api.github.com/users/philwebb/repos",
        "events_url": "https://api.github.com/users/philwebb/events{/privacy}",
        "received_events_url": "https://api.github.com/users/philwebb/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 29,
      "closed_issues": 0,
      "state": "open",
      "created_at": "2018-03-21T14:09:08Z",
      "updated_at": "2018-12-14T18:07:30Z",
      "due_on": null,
      "closed_at": null
    },
    "comments": 1,
    "created_at": "2018-12-11T14:15:00Z",
    "updated_at": "2018-12-14T16:25:42Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "I'm currently using a `RestTemplateCustomizer` bean to set a custom request factory for all RestTemplate's:\r\n\r\nhttps://github.com/freefair/okhttp-spring-boot/blob/f0f6dcc0ba685c40ebe15de725c1170307027173/autoconfigure/src/main/java/io/freefair/spring/okhttp/OkHttpRestTemplateAutoConfiguration.java#L22-L27\r\n\r\nThe `TestRestTemplate` I get injected into my unit tests also uses this custom request factory, but calling `withBasicAuth()` returns a new `TestRestTemplate`-instance which no longer contains the custom request factory but a default one.\r\n\r\nEnvironment:\r\nSpring Boot 2.1.1.RELEASE\r\nOpenJDK 11\r\n\r\nSimilar issues:\r\nsee #7812\r\nsee #7441\r\nsee #7265"
  },
  {
    "url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15438",
    "repository_url": "https://api.github.com/repos/spring-projects/spring-boot",
    "labels_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15438/labels{/name}",
    "comments_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15438/comments",
    "events_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15438/events",
    "html_url": "https://github.com/spring-projects/spring-boot/pull/15438",
    "id": 389498149,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjM3NDc1Mzgx",
    "number": 15438,
    "title": "Replace anonymous inner class with lambda",
    "user": {
      "login": "igor-suhorukov",
      "id": 10332206,
      "node_id": "MDQ6VXNlcjEwMzMyMjA2",
      "avatar_url": "https://avatars1.githubusercontent.com/u/10332206?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/igor-suhorukov",
      "html_url": "https://github.com/igor-suhorukov",
      "followers_url": "https://api.github.com/users/igor-suhorukov/followers",
      "following_url": "https://api.github.com/users/igor-suhorukov/following{/other_user}",
      "gists_url": "https://api.github.com/users/igor-suhorukov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/igor-suhorukov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/igor-suhorukov/subscriptions",
      "organizations_url": "https://api.github.com/users/igor-suhorukov/orgs",
      "repos_url": "https://api.github.com/users/igor-suhorukov/repos",
      "events_url": "https://api.github.com/users/igor-suhorukov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/igor-suhorukov/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 293438798,
        "node_id": "MDU6TGFiZWwyOTM0Mzg3OTg=",
        "url": "https://api.github.com/repos/spring-projects/spring-boot/labels/status:%20waiting-for-triage",
        "name": "status: waiting-for-triage",
        "color": "fef2c0",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2018-12-10T21:40:16Z",
    "updated_at": "2018-12-13T23:11:42Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/spring-projects/spring-boot/pulls/15438",
      "html_url": "https://github.com/spring-projects/spring-boot/pull/15438",
      "diff_url": "https://github.com/spring-projects/spring-boot/pull/15438.diff",
      "patch_url": "https://github.com/spring-projects/spring-boot/pull/15438.patch"
    },
    "body": "<!--\r\nThanks for contributing to Spring Boot. Please review the following notes before\r\nsubmitting you pull request.\r\n\r\nSecurity Vulnerabilities\r\n\r\nSTOP! If your contribution fixes a security vulnerability, please do not submit it.\r\nInstead, please head over to https://pivotal.io/security to learn how to disclose a\r\nvulnerability responsibly.\r\n\r\nDependency Upgrades\r\n\r\nPlease do not open a pull request for a straightforward dependency upgrade (one that\r\nonly updates the version property). We have a semi-automated process for such upgrades\r\nthat we prefer to use. However, if the upgrade is more involved (such as requiring\r\nchanges for removed or deprecated API) your pull request is most welcome.\r\n\r\nDescribing Your Changes\r\n\r\nIf, having reviewed the notes above, you're ready to submit your pull request, please\r\nprovide a brief description of the proposed changes. If they fix a bug, please\r\ndescribe the broken behaviour and how the changes fix it. If they make an enhancement,\r\nplease describe the new functionality and why you believe it's useful. If your pull\r\nrequest relates to any existing issues, please reference them by using the issue number\r\nprefixed with #.\r\n-->\r\n"
  },
  {
    "url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15437",
    "repository_url": "https://api.github.com/repos/spring-projects/spring-boot",
    "labels_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15437/labels{/name}",
    "comments_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15437/comments",
    "events_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15437/events",
    "html_url": "https://github.com/spring-projects/spring-boot/issues/15437",
    "id": 389352389,
    "node_id": "MDU6SXNzdWUzODkzNTIzODk=",
    "number": 15437,
    "title": "Support enable/disabling SSL client authentication on the management port without overriding SSL parameters",
    "user": {
      "login": "alonbl",
      "id": 1263789,
      "node_id": "MDQ6VXNlcjEyNjM3ODk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1263789?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alonbl",
      "html_url": "https://github.com/alonbl",
      "followers_url": "https://api.github.com/users/alonbl/followers",
      "following_url": "https://api.github.com/users/alonbl/following{/other_user}",
      "gists_url": "https://api.github.com/users/alonbl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alonbl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alonbl/subscriptions",
      "organizations_url": "https://api.github.com/users/alonbl/orgs",
      "repos_url": "https://api.github.com/users/alonbl/repos",
      "events_url": "https://api.github.com/users/alonbl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alonbl/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 293438798,
        "node_id": "MDU6TGFiZWwyOTM0Mzg3OTg=",
        "url": "https://api.github.com/repos/spring-projects/spring-boot/labels/status:%20waiting-for-triage",
        "name": "status: waiting-for-triage",
        "color": "fef2c0",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-12-10T15:26:29Z",
    "updated_at": "2018-12-10T15:30:47Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "Continuing discussion from #14985, I would like to continue discussion and agree on the solution.\r\n\r\nCURRENT IMPLEMENTATION\r\n\r\nManagement port inherits all SSL settings from the server port, in other words by default `management.server.ssl = server.ssl`, while any setting at `management.ssl.*` starts from a fresh `management.ssl` settings.\r\n\r\nThis is convenience in most of the cases as in most cases the server side settings are specified and matches both the server and management settings and no need to specify any override of management port settings.\r\n\r\nI guess that the common case of design is for disabling management port SSL by  `management.server.ssl.enabled=false`, which is good enough and then we do not care about not inheriting settings from server but start fresh.\r\n\r\nHowever, when specifying client side authentication using `client-auth` and `key-*` on the `server.ssl.*` to provide client authentication to remote side, it sometimes makes sense to either disable this for management port or change the identity without impacting the server side settings, for example `protocol`, `ciphers`, `enable-protocols` etc...\r\n\r\nThe problem is that once a single parameter is specify at `management.server.ssl.*` it requires specifying all parameters again, for example:\r\n\r\n```yaml\r\nserver:\r\n  ssl:\r\n    enable: true\r\n    protocol: TLSv1.2\r\n    trust-store: trust.jks\r\n    key-store: key.jks\r\n    client-auth: need\r\n management:\r\n  server:\r\n    ssl:\r\n      enable: true\r\n      protocol: TLSv1.2\r\n      trust-store: trust.jks\r\n      client-auth: none\r\n```\r\n\r\nNotice that the `protocol` and `trust-store` should be repeated in the management statement just to turn client authentication off.\r\n\r\nEXPECTED IMPLEMENTATION\r\n\r\nSeparate the server SSL settings from the client SSL settings while keeping backward compatibility.\r\n\r\nI suggest to move SSL client setting `client-auth` and `key-*`  to `ssl-client` object, and as fallback (if unset) consult the `ssl` object.\r\n\r\nFor example:\r\n\r\n```yaml\r\nserver:\r\n  ssl:\r\n    enable: true\r\n    protocol: TLSv1.2\r\n    trust-store: trust.jks\r\n  ssl-client:\r\n    key-store: key.jks\r\n    client-auth: need\r\n management:\r\n  server:\r\n    ssl-client:\r\n      client-auth: none\r\n```\r\n\r\nor:\r\n\r\n```yaml\r\nserver:\r\n  ssl:\r\n    enable: true\r\n    protocol: TLSv1.2\r\n    trust-store: trust.jks\r\n  ssl-client:\r\n    key-store: key.jks\r\n    client-auth: need\r\n management:\r\n  server:\r\n    ssl-client:\r\n      key-store: key-management.jks\r\n      client-auth: need\r\n```\r\n\r\nBackward compatibility is maintained using fallback to `server.ssl.*`.\r\n\r\n```yaml\r\nserver:\r\n  ssl:\r\n    enable: true\r\n    protocol: TLSv1.2\r\n    trust-store: trust.jks\r\n    key-store: key.jks\r\n    client-auth: need\r\n management:\r\n  server:\r\n    ssl:\r\n      key-store: key-management.jks\r\n      client-auth: need\r\n```\r\n\r\nAny other method will be gladly accepted :)\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15434",
    "repository_url": "https://api.github.com/repos/spring-projects/spring-boot",
    "labels_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15434/labels{/name}",
    "comments_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15434/comments",
    "events_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15434/events",
    "html_url": "https://github.com/spring-projects/spring-boot/issues/15434",
    "id": 389308759,
    "node_id": "MDU6SXNzdWUzODkzMDg3NTk=",
    "number": 15434,
    "title": "Provide a means for a TomcatContextCustomizer to use LoaderHidingResourceRoot when the context has no resources",
    "user": {
      "login": "ilya-ershov",
      "id": 39500120,
      "node_id": "MDQ6VXNlcjM5NTAwMTIw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/39500120?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ilya-ershov",
      "html_url": "https://github.com/ilya-ershov",
      "followers_url": "https://api.github.com/users/ilya-ershov/followers",
      "following_url": "https://api.github.com/users/ilya-ershov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ilya-ershov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ilya-ershov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ilya-ershov/subscriptions",
      "organizations_url": "https://api.github.com/users/ilya-ershov/orgs",
      "repos_url": "https://api.github.com/users/ilya-ershov/repos",
      "events_url": "https://api.github.com/users/ilya-ershov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ilya-ershov/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 293438798,
        "node_id": "MDU6TGFiZWwyOTM0Mzg3OTg=",
        "url": "https://api.github.com/repos/spring-projects/spring-boot/labels/status:%20waiting-for-triage",
        "name": "status: waiting-for-triage",
        "color": "fef2c0",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2018-12-10T13:47:21Z",
    "updated_at": "2018-12-10T15:01:34Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "The issue happens when jar executable doesn't have **webapp** (or static, or public, e.g.) directory. Then `org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory#prepareContext` leaves `context.recources == null`, and when I try to add new resources inside `TomcatStaticResourcesSupportWorkaround` fails with NPE. \r\n`context.setResources(new StandardRoot())` can be used to cover that case, because there is no public access to `new LoaderHidingResourceRoot()`.\r\nWould be nice if `LoaderHidingResourceRoot` can be made public to allow customizer's to set spring-classpath-secured [`WebResourceRoot`.[]\r\n\r\nAttaching sampls project. NPE on DemoApplication run\r\n[demo.zip](https://github.com/spring-projects/spring-boot/files/2663417/demo.zip)\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15429",
    "repository_url": "https://api.github.com/repos/spring-projects/spring-boot",
    "labels_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15429/labels{/name}",
    "comments_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15429/comments",
    "events_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15429/events",
    "html_url": "https://github.com/spring-projects/spring-boot/pull/15429",
    "id": 389077078,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjM3MTY1MTI3",
    "number": 15429,
    "title": "Drop ContentContainingCondition in favor of Assertions.contentOf",
    "user": {
      "login": "dreis2211",
      "id": 6304496,
      "node_id": "MDQ6VXNlcjYzMDQ0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/6304496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dreis2211",
      "html_url": "https://github.com/dreis2211",
      "followers_url": "https://api.github.com/users/dreis2211/followers",
      "following_url": "https://api.github.com/users/dreis2211/following{/other_user}",
      "gists_url": "https://api.github.com/users/dreis2211/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dreis2211/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dreis2211/subscriptions",
      "organizations_url": "https://api.github.com/users/dreis2211/orgs",
      "repos_url": "https://api.github.com/users/dreis2211/repos",
      "events_url": "https://api.github.com/users/dreis2211/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dreis2211/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 293438798,
        "node_id": "MDU6TGFiZWwyOTM0Mzg3OTg=",
        "url": "https://api.github.com/repos/spring-projects/spring-boot/labels/status:%20waiting-for-triage",
        "name": "status: waiting-for-triage",
        "color": "fef2c0",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2018-12-09T23:23:05Z",
    "updated_at": "2018-12-09T23:25:47Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/spring-projects/spring-boot/pulls/15429",
      "html_url": "https://github.com/spring-projects/spring-boot/pull/15429",
      "diff_url": "https://github.com/spring-projects/spring-boot/pull/15429.diff",
      "patch_url": "https://github.com/spring-projects/spring-boot/pull/15429.patch"
    },
    "body": "Hi,\r\n\r\nthis PR replaces usages of `ContentContainingCondition` in favor of AssertJ's `Assertions.contentOf`.\r\n\r\nLet me know what you think.\r\nCheers,\r\nChristoph"
  },
  {
    "url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15426",
    "repository_url": "https://api.github.com/repos/spring-projects/spring-boot",
    "labels_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15426/labels{/name}",
    "comments_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15426/comments",
    "events_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15426/events",
    "html_url": "https://github.com/spring-projects/spring-boot/issues/15426",
    "id": 389013031,
    "node_id": "MDU6SXNzdWUzODkwMTMwMzE=",
    "number": 15426,
    "title": "Replace ${sys:PID} with %pid in log4j2 configuration",
    "user": {
      "login": "thekalinga",
      "id": 452518,
      "node_id": "MDQ6VXNlcjQ1MjUxOA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/452518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thekalinga",
      "html_url": "https://github.com/thekalinga",
      "followers_url": "https://api.github.com/users/thekalinga/followers",
      "following_url": "https://api.github.com/users/thekalinga/following{/other_user}",
      "gists_url": "https://api.github.com/users/thekalinga/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thekalinga/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thekalinga/subscriptions",
      "organizations_url": "https://api.github.com/users/thekalinga/orgs",
      "repos_url": "https://api.github.com/users/thekalinga/repos",
      "events_url": "https://api.github.com/users/thekalinga/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thekalinga/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 293438798,
        "node_id": "MDU6TGFiZWwyOTM0Mzg3OTg=",
        "url": "https://api.github.com/repos/spring-projects/spring-boot/labels/status:%20waiting-for-triage",
        "name": "status: waiting-for-triage",
        "color": "fef2c0",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-12-09T11:34:37Z",
    "updated_at": "2018-12-09T13:37:14Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "Currently log4j2 configuration in spring boot uses `????` as `PID` in the [configuration file](https://github.com/spring-projects/spring-boot/blob/master/spring-boot-project/spring-boot/src/main/resources/org/springframework/boot/logging/log4j2/log4j2-file.xml#L4)\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<Configuration status=\"WARN\">\r\n\t<Properties>\r\n\t\t<Property name=\"PID\">????</Property>\r\n\t\t<Property name=\"CONSOLE_LOG_PATTERN\">%clr{%d{${LOG_DATEFORMAT_PATTERN}}}{faint} %clr{${LOG_LEVEL_PATTERN}} %clr{${sys:PID}}{magenta} %clr{---}{faint} %clr{[%15.15t]}{faint} %clr{%-40.40c{1.}}{cyan} %clr{:}{faint} %m%n${sys:LOG_EXCEPTION_CONVERSION_WORD}</Property>\r\n\t\t<!-- a lot more -->\r\n\t</Properties>\r\n\t<!-- a lot more -->\r\n</Configuration>\r\n```\r\n\r\nAnd [`LoggingSystemProperties`](https://github.com/spring-projects/spring-boot/blob/2f4751a6486f0b9c5653725cb3cb0b346524c03b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/logging/LoggingSystemProperties.java#L106) sets a system property `PID` and replaces this `????` with actual PID\r\n\r\nHowever, Log4j2 provides a native pid plugin [`ProcessIdPatternConverter`](https://github.com/apache/logging-log4j2/blob/master/log4j-core/src/main/java/org/apache/logging/log4j/core/pattern/ProcessIdPatternConverter.java) that can used directly in the configuration if we use `%pid` instead of `${sys:PID}`\r\n\r\nIts better to use the native version so that log4j2 users dont have to worry about learning Spring boot magic under the hood (one less thing to worry about) when they try to copy default spring boot `log4j2.xml` as a base template before they start making their own changes to the file\r\n\r\nMore info: https://stackoverflow.com/questions/53683177/how-does-spring-boot-resolve-pid-thru-using-log4j2/53686018"
  },
  {
    "url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15420",
    "repository_url": "https://api.github.com/repos/spring-projects/spring-boot",
    "labels_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15420/labels{/name}",
    "comments_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15420/comments",
    "events_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15420/events",
    "html_url": "https://github.com/spring-projects/spring-boot/issues/15420",
    "id": 388768180,
    "node_id": "MDU6SXNzdWUzODg3NjgxODA=",
    "number": 15420,
    "title": "Add an outcome tag to RestTemplate metrics similar to that provided for WebMVC and WebFlux",
    "user": {
      "login": "michaelmcfadyen",
      "id": 2422268,
      "node_id": "MDQ6VXNlcjI0MjIyNjg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2422268?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelmcfadyen",
      "html_url": "https://github.com/michaelmcfadyen",
      "followers_url": "https://api.github.com/users/michaelmcfadyen/followers",
      "following_url": "https://api.github.com/users/michaelmcfadyen/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelmcfadyen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelmcfadyen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelmcfadyen/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelmcfadyen/orgs",
      "repos_url": "https://api.github.com/users/michaelmcfadyen/repos",
      "events_url": "https://api.github.com/users/michaelmcfadyen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelmcfadyen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 16916893,
        "node_id": "MDU6TGFiZWwxNjkxNjg5Mw==",
        "url": "https://api.github.com/repos/spring-projects/spring-boot/labels/type:%20enhancement",
        "name": "type: enhancement",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-12-07T18:38:08Z",
    "updated_at": "2018-12-08T13:54:59Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "Related to #13801\r\n\r\n_This effects spring boot actuator and specifically it's metrics classes._\r\n\r\n**Situation**\r\nI want to graph a count of calls made to a downstream api that returned a 4xx status code.\r\n\r\nIt would be useful to have a tag on those metrics that would group the response codes appropriately. For example these groupings could be:\r\n- 1xx -> informational\r\n- 2xx -> success\r\n- 3xx -> redirection\r\n- 4xx -> client_error\r\n- 5xx -> server_error\r\n\r\nThis tag has already been added to the web mvc metrics.\r\n "
  },
  {
    "url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15419",
    "repository_url": "https://api.github.com/repos/spring-projects/spring-boot",
    "labels_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15419/labels{/name}",
    "comments_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15419/comments",
    "events_url": "https://api.github.com/repos/spring-projects/spring-boot/issues/15419/events",
    "html_url": "https://github.com/spring-projects/spring-boot/issues/15419",
    "id": 388723301,
    "node_id": "MDU6SXNzdWUzODg3MjMzMDE=",
    "number": 15419,
    "title": "Refactor usage of ObjectProvider where it is incompatible with functional bean definitions",
    "user": {
      "login": "dsyer",
      "id": 124075,
      "node_id": "MDQ6VXNlcjEyNDA3NQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/124075?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsyer",
      "html_url": "https://github.com/dsyer",
      "followers_url": "https://api.github.com/users/dsyer/followers",
      "following_url": "https://api.github.com/users/dsyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsyer/subscriptions",
      "organizations_url": "https://api.github.com/users/dsyer/orgs",
      "repos_url": "https://api.github.com/users/dsyer/repos",
      "events_url": "https://api.github.com/users/dsyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 293438798,
        "node_id": "MDU6TGFiZWwyOTM0Mzg3OTg=",
        "url": "https://api.github.com/repos/spring-projects/spring-boot/labels/status:%20waiting-for-triage",
        "name": "status: waiting-for-triage",
        "color": "fef2c0",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-12-07T16:25:34Z",
    "updated_at": "2018-12-12T16:15:56Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "body": "See https://jira.spring.io/browse/SPR-17577 for background (Spring does not support injection of `ObjectProvider<Map<String,Foo>>` in the \"functional style\", and we essentially only support it for `@Autowired` dependencies for historic reasons). It only happens in a couple of places that I found so far. Example:\r\n\r\n```\r\n\t@Configuration\r\n\t@ConditionalOnClass(Flux.class)\r\n\tstatic class ReactiveHealthIndicatorConfiguration {\r\n\r\n\t\t@Bean\r\n\t\t@ConditionalOnMissingBean\r\n\t\tpublic ReactiveHealthIndicatorRegistry reactiveHealthIndicatorRegistry(\r\n\t\t\t\tObjectProvider<Map<String, ReactiveHealthIndicator>> reactiveHealthIndicators,\r\n\t\t\t\tObjectProvider<Map<String, HealthIndicator>> healthIndicators) {\r\n\t\t\treturn new ReactiveHealthIndicatorRegistryFactory()\r\n\t\t\t\t\t.createReactiveHealthIndicatorRegistry(\r\n\t\t\t\t\t\t\treactiveHealthIndicators\r\n\t\t\t\t\t\t\t\t\t.getIfAvailable(Collections::emptyMap),\r\n\t\t\t\t\t\t\thealthIndicators.getIfAvailable(Collections::emptyMap));\r\n\t\t}\r\n\r\n\t}\r\n```\r\n\r\nWould it not suffice in that case to simply inject the `Map` (which would be empty if there were no beans of that type)?"
  }
]